Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM IDENTIFIER PONTOVIRGULA declaracaoFunctions declaracaoVars Corpo
Rule 2     declaracaoFunctions -> declaracaoFunctions declaracaoFunction
Rule 3     declaracaoFunctions -> declaracaoFunction
Rule 4     declaracaoFunctions -> <empty>
Rule 5     declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA
Rule 6     argsFunction -> <empty>
Rule 7     argsFunction -> vars
Rule 8     declaracaoVars -> VAR vars
Rule 9     declaracaoVars -> <empty>
Rule 10    vars -> vars var
Rule 11    vars -> var
Rule 12    var -> listaVars DOISPONTOS Tipo PONTOVIRGULA
Rule 13    var -> listaVars DOISPONTOS Tipo
Rule 14    var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA
Rule 15    listaVars -> IDENTIFIER
Rule 16    listaVars -> listaVars VIRGULA IDENTIFIER
Rule 17    Tipo -> TYPEINTEGER
Rule 18    Tipo -> TYPESTRING
Rule 19    Tipo -> TYPEBOOLEAN
Rule 20    Corpo -> BEGIN Conteudo END PONTO
Rule 21    Corpo -> BEGIN Conteudo END
Rule 22    Conteudo -> Comando
Rule 23    Conteudo -> Conteudo Comando
Rule 24    Comando -> declaracaoIf
Rule 25    Comando -> For
Rule 26    Comando -> While
Rule 27    Comando -> Function
Rule 28    Comando -> IDENTIFIER ASSIGN Valor PONTOVIRGULA
Rule 29    Comando -> IDENTIFIER ASSIGN Valor
Rule 30    Comando -> IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
Rule 31    Comando -> IDENTIFIER ASSIGN CondA1
Rule 32    Identifier -> IDENTIFIER
Rule 33    Identifier -> IDENTIFIER LBRACKET Valor RBRACKET
Rule 34    Valor -> Identifier
Rule 35    Valor -> NUMBER
Rule 36    Valor -> BOOLEAN
Rule 37    Valor -> STRING
Rule 38    Valor -> Function
Rule 39    Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
Rule 40    Function -> IDENTIFIER LPAREN Valores RPAREN
Rule 41    Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA
Rule 42    Function -> IDENTIFIER LPAREN RPAREN
Rule 43    declaracaoIf -> IF Cond THEN Conteudo
Rule 44    declaracaoIf -> IF Cond THEN Conteudo ELSE Conteudo
Rule 45    Cond -> LPAREN Cond RPAREN
Rule 46    Cond -> CondL1
Rule 47    CondL1 -> LPAREN CondL1 RPAREN
Rule 48    CondL1 -> CondL1 OR CondL2
Rule 49    CondL1 -> CondL2
Rule 50    CondL2 -> LPAREN CondL2 RPAREN
Rule 51    CondL2 -> CondL2 AND CondL3
Rule 52    CondL2 -> CondL3
Rule 53    CondL3 -> LPAREN CondL3 RPAREN
Rule 54    CondL3 -> NOT CondR1
Rule 55    CondL3 -> CondR1
Rule 56    CondR1 -> LPAREN CondR1 RPAREN
Rule 57    CondR1 -> CondA1 EQUAL CondA1
Rule 58    CondR1 -> CondA1 LESS CondA1
Rule 59    CondR1 -> CondA1 GREATER CondA1
Rule 60    CondR1 -> CondA1 LESSEQUAL CondA1
Rule 61    CondR1 -> CondA1 GREATEREQUAL CondA1
Rule 62    CondR1 -> CondA1 DIFFERENT CondA1
Rule 63    CondR1 -> CondA1
Rule 64    CondA1 -> LPAREN CondA1 RPAREN
Rule 65    CondA1 -> CondA1 SUM CondA2
Rule 66    CondA1 -> CondA1 SUB CondA2
Rule 67    CondA1 -> CondA2
Rule 68    CondA2 -> LPAREN CondA2 RPAREN
Rule 69    CondA2 -> CondA2 MUL CondA3
Rule 70    CondA2 -> CondA2 DIVREAL CondA3
Rule 71    CondA2 -> CondA2 DIV CondA3
Rule 72    CondA2 -> CondA2 MOD CondA3
Rule 73    CondA2 -> CondA3
Rule 74    CondA3 -> LPAREN CondA3 RPAREN
Rule 75    CondA3 -> Valor
Rule 76    Valores -> Valores VIRGULA Valor
Rule 77    Valores -> Valor
Rule 78    For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
Rule 79    For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
Rule 80    For -> FOR InicioFor TO FimFor DO Comando
Rule 81    For -> FOR InicioFor DOWNTO FimFor DO Comando
Rule 82    InicioFor -> Comando
Rule 83    FimFor -> Valor
Rule 84    While -> WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
Rule 85    While -> WHILE Cond DO Comando

Terminals, with rules where they appear

AND                  : 51
ARRAY                : 14
ASSIGN               : 28 29 30 31
BEGIN                : 5 20 21 78 79 84
BOOLEAN              : 36
DIFFERENT            : 62
DIV                  : 71
DIVREAL              : 70
DO                   : 78 79 80 81 84 85
DOISPONTOS           : 5 12 13 14
DOWNTO               : 79 81
ELSE                 : 44
END                  : 5 20 21 78 79 84
EQUAL                : 57
FOR                  : 78 79 80 81
FUNCTION             : 5
GREATER              : 59
GREATEREQUAL         : 61
IDENTIFIER           : 1 5 15 16 28 29 30 31 32 33 39 40 41 42
IF                   : 43 44
LBRACKET             : 14 33
LESS                 : 58
LESSEQUAL            : 60
LPAREN               : 5 39 40 41 42 45 47 50 53 56 64 68 74
MOD                  : 72
MUL                  : 69
NOT                  : 54
NUMBER               : 14 14 35
OF                   : 14
OR                   : 48
PONTO                : 14 14 20
PONTOVIRGULA         : 1 5 5 12 14 28 30 39 41 78 79 84
PROGRAM              : 1
RBRACKET             : 14 33
RPAREN               : 5 39 40 41 42 45 47 50 53 56 64 68 74
STRING               : 37
SUB                  : 66
SUM                  : 65
THEN                 : 43 44
TO                   : 78 80
TYPEBOOLEAN          : 19
TYPEINTEGER          : 17
TYPESTRING           : 18
VAR                  : 8
VIRGULA              : 16 76
WHILE                : 84 85
error                : 

Nonterminals, with rules where they appear

Comando              : 22 23 80 81 82 85
Cond                 : 43 44 45 84 85
CondA1               : 30 31 57 57 58 58 59 59 60 60 61 61 62 62 63 64 65 66
CondA2               : 65 66 67 68 69 70 71 72
CondA3               : 69 70 71 72 73 74
CondL1               : 46 47 48
CondL2               : 48 49 50 51
CondL3               : 51 52 53
CondR1               : 54 55 56
Conteudo             : 5 20 21 23 43 44 44 78 79 84
Corpo                : 1
FimFor               : 78 79 80 81
For                  : 25
Function             : 27 38
Identifier           : 34
InicioFor            : 78 79 80 81
Tipo                 : 5 12 13 14
Valor                : 28 29 33 75 76 77 83
Valores              : 39 40 76
While                : 26
argsFunction         : 5
declaracaoFunction   : 2 3
declaracaoFunctions  : 1 2
declaracaoIf         : 24
declaracaoVars       : 1 5
listaVars            : 12 13 14 16
program              : 0
var                  : 10 11
vars                 : 7 8 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM IDENTIFIER PONTOVIRGULA declaracaoFunctions declaracaoVars Corpo

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . IDENTIFIER PONTOVIRGULA declaracaoFunctions declaracaoVars Corpo

    IDENTIFIER      shift and go to state 3


state 3

    (1) program -> PROGRAM IDENTIFIER . PONTOVIRGULA declaracaoFunctions declaracaoVars Corpo

    PONTOVIRGULA    shift and go to state 4


state 4

    (1) program -> PROGRAM IDENTIFIER PONTOVIRGULA . declaracaoFunctions declaracaoVars Corpo
    (2) declaracaoFunctions -> . declaracaoFunctions declaracaoFunction
    (3) declaracaoFunctions -> . declaracaoFunction
    (4) declaracaoFunctions -> .
    (5) declaracaoFunction -> . FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA

  ! shift/reduce conflict for FUNCTION resolved as shift
    VAR             reduce using rule 4 (declaracaoFunctions -> .)
    BEGIN           reduce using rule 4 (declaracaoFunctions -> .)
    FUNCTION        shift and go to state 7

  ! FUNCTION        [ reduce using rule 4 (declaracaoFunctions -> .) ]

    declaracaoFunctions            shift and go to state 5
    declaracaoFunction             shift and go to state 6

state 5

    (1) program -> PROGRAM IDENTIFIER PONTOVIRGULA declaracaoFunctions . declaracaoVars Corpo
    (2) declaracaoFunctions -> declaracaoFunctions . declaracaoFunction
    (8) declaracaoVars -> . VAR vars
    (9) declaracaoVars -> .
    (5) declaracaoFunction -> . FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA

    VAR             shift and go to state 10
    BEGIN           reduce using rule 9 (declaracaoVars -> .)
    FUNCTION        shift and go to state 7

    declaracaoVars                 shift and go to state 8
    declaracaoFunction             shift and go to state 9

state 6

    (3) declaracaoFunctions -> declaracaoFunction .

    VAR             reduce using rule 3 (declaracaoFunctions -> declaracaoFunction .)
    FUNCTION        reduce using rule 3 (declaracaoFunctions -> declaracaoFunction .)
    BEGIN           reduce using rule 3 (declaracaoFunctions -> declaracaoFunction .)


state 7

    (5) declaracaoFunction -> FUNCTION . IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA

    IDENTIFIER      shift and go to state 11


state 8

    (1) program -> PROGRAM IDENTIFIER PONTOVIRGULA declaracaoFunctions declaracaoVars . Corpo
    (20) Corpo -> . BEGIN Conteudo END PONTO
    (21) Corpo -> . BEGIN Conteudo END

    BEGIN           shift and go to state 13

    Corpo                          shift and go to state 12

state 9

    (2) declaracaoFunctions -> declaracaoFunctions declaracaoFunction .

    VAR             reduce using rule 2 (declaracaoFunctions -> declaracaoFunctions declaracaoFunction .)
    FUNCTION        reduce using rule 2 (declaracaoFunctions -> declaracaoFunctions declaracaoFunction .)
    BEGIN           reduce using rule 2 (declaracaoFunctions -> declaracaoFunctions declaracaoFunction .)


state 10

    (8) declaracaoVars -> VAR . vars
    (10) vars -> . vars var
    (11) vars -> . var
    (12) var -> . listaVars DOISPONTOS Tipo PONTOVIRGULA
    (13) var -> . listaVars DOISPONTOS Tipo
    (14) var -> . listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA
    (15) listaVars -> . IDENTIFIER
    (16) listaVars -> . listaVars VIRGULA IDENTIFIER

    IDENTIFIER      shift and go to state 17

    vars                           shift and go to state 14
    var                            shift and go to state 15
    listaVars                      shift and go to state 16

state 11

    (5) declaracaoFunction -> FUNCTION IDENTIFIER . LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA

    LPAREN          shift and go to state 18


state 12

    (1) program -> PROGRAM IDENTIFIER PONTOVIRGULA declaracaoFunctions declaracaoVars Corpo .

    $end            reduce using rule 1 (program -> PROGRAM IDENTIFIER PONTOVIRGULA declaracaoFunctions declaracaoVars Corpo .)


state 13

    (20) Corpo -> BEGIN . Conteudo END PONTO
    (21) Corpo -> BEGIN . Conteudo END
    (22) Conteudo -> . Comando
    (23) Conteudo -> . Conteudo Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Conteudo                       shift and go to state 19
    Comando                        shift and go to state 20
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 14

    (8) declaracaoVars -> VAR vars .
    (10) vars -> vars . var
    (12) var -> . listaVars DOISPONTOS Tipo PONTOVIRGULA
    (13) var -> . listaVars DOISPONTOS Tipo
    (14) var -> . listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA
    (15) listaVars -> . IDENTIFIER
    (16) listaVars -> . listaVars VIRGULA IDENTIFIER

    BEGIN           reduce using rule 8 (declaracaoVars -> VAR vars .)
    IDENTIFIER      shift and go to state 17

    var                            shift and go to state 29
    listaVars                      shift and go to state 16

state 15

    (11) vars -> var .

    IDENTIFIER      reduce using rule 11 (vars -> var .)
    BEGIN           reduce using rule 11 (vars -> var .)
    RPAREN          reduce using rule 11 (vars -> var .)


state 16

    (12) var -> listaVars . DOISPONTOS Tipo PONTOVIRGULA
    (13) var -> listaVars . DOISPONTOS Tipo
    (14) var -> listaVars . DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA
    (16) listaVars -> listaVars . VIRGULA IDENTIFIER

    DOISPONTOS      shift and go to state 30
    VIRGULA         shift and go to state 31


state 17

    (15) listaVars -> IDENTIFIER .

    DOISPONTOS      reduce using rule 15 (listaVars -> IDENTIFIER .)
    VIRGULA         reduce using rule 15 (listaVars -> IDENTIFIER .)


state 18

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN . argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA
    (6) argsFunction -> .
    (7) argsFunction -> . vars
    (10) vars -> . vars var
    (11) vars -> . var
    (12) var -> . listaVars DOISPONTOS Tipo PONTOVIRGULA
    (13) var -> . listaVars DOISPONTOS Tipo
    (14) var -> . listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA
    (15) listaVars -> . IDENTIFIER
    (16) listaVars -> . listaVars VIRGULA IDENTIFIER

    RPAREN          reduce using rule 6 (argsFunction -> .)
    IDENTIFIER      shift and go to state 17

    argsFunction                   shift and go to state 32
    vars                           shift and go to state 33
    var                            shift and go to state 15
    listaVars                      shift and go to state 16

state 19

    (20) Corpo -> BEGIN Conteudo . END PONTO
    (21) Corpo -> BEGIN Conteudo . END
    (23) Conteudo -> Conteudo . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    END             shift and go to state 34
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Comando                        shift and go to state 35
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 20

    (22) Conteudo -> Comando .

    END             reduce using rule 22 (Conteudo -> Comando .)
    IDENTIFIER      reduce using rule 22 (Conteudo -> Comando .)
    IF              reduce using rule 22 (Conteudo -> Comando .)
    FOR             reduce using rule 22 (Conteudo -> Comando .)
    WHILE           reduce using rule 22 (Conteudo -> Comando .)
    ELSE            reduce using rule 22 (Conteudo -> Comando .)
    TO              reduce using rule 22 (Conteudo -> Comando .)
    DOWNTO          reduce using rule 22 (Conteudo -> Comando .)


state 21

    (24) Comando -> declaracaoIf .

    END             reduce using rule 24 (Comando -> declaracaoIf .)
    IDENTIFIER      reduce using rule 24 (Comando -> declaracaoIf .)
    IF              reduce using rule 24 (Comando -> declaracaoIf .)
    FOR             reduce using rule 24 (Comando -> declaracaoIf .)
    WHILE           reduce using rule 24 (Comando -> declaracaoIf .)
    TO              reduce using rule 24 (Comando -> declaracaoIf .)
    DOWNTO          reduce using rule 24 (Comando -> declaracaoIf .)
    ELSE            reduce using rule 24 (Comando -> declaracaoIf .)


state 22

    (25) Comando -> For .

    END             reduce using rule 25 (Comando -> For .)
    IDENTIFIER      reduce using rule 25 (Comando -> For .)
    IF              reduce using rule 25 (Comando -> For .)
    FOR             reduce using rule 25 (Comando -> For .)
    WHILE           reduce using rule 25 (Comando -> For .)
    TO              reduce using rule 25 (Comando -> For .)
    DOWNTO          reduce using rule 25 (Comando -> For .)
    ELSE            reduce using rule 25 (Comando -> For .)


state 23

    (26) Comando -> While .

    END             reduce using rule 26 (Comando -> While .)
    IDENTIFIER      reduce using rule 26 (Comando -> While .)
    IF              reduce using rule 26 (Comando -> While .)
    FOR             reduce using rule 26 (Comando -> While .)
    WHILE           reduce using rule 26 (Comando -> While .)
    TO              reduce using rule 26 (Comando -> While .)
    DOWNTO          reduce using rule 26 (Comando -> While .)
    ELSE            reduce using rule 26 (Comando -> While .)


state 24

    (27) Comando -> Function .

    END             reduce using rule 27 (Comando -> Function .)
    IDENTIFIER      reduce using rule 27 (Comando -> Function .)
    IF              reduce using rule 27 (Comando -> Function .)
    FOR             reduce using rule 27 (Comando -> Function .)
    WHILE           reduce using rule 27 (Comando -> Function .)
    TO              reduce using rule 27 (Comando -> Function .)
    DOWNTO          reduce using rule 27 (Comando -> Function .)
    ELSE            reduce using rule 27 (Comando -> Function .)


state 25

    (28) Comando -> IDENTIFIER . ASSIGN Valor PONTOVIRGULA
    (29) Comando -> IDENTIFIER . ASSIGN Valor
    (30) Comando -> IDENTIFIER . ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> IDENTIFIER . ASSIGN CondA1
    (39) Function -> IDENTIFIER . LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> IDENTIFIER . LPAREN Valores RPAREN
    (41) Function -> IDENTIFIER . LPAREN RPAREN PONTOVIRGULA
    (42) Function -> IDENTIFIER . LPAREN RPAREN

    ASSIGN          shift and go to state 36
    LPAREN          shift and go to state 37


state 26

    (43) declaracaoIf -> IF . Cond THEN Conteudo
    (44) declaracaoIf -> IF . Cond THEN Conteudo ELSE Conteudo
    (45) Cond -> . LPAREN Cond RPAREN
    (46) Cond -> . CondL1
    (47) CondL1 -> . LPAREN CondL1 RPAREN
    (48) CondL1 -> . CondL1 OR CondL2
    (49) CondL1 -> . CondL2
    (50) CondL2 -> . LPAREN CondL2 RPAREN
    (51) CondL2 -> . CondL2 AND CondL3
    (52) CondL2 -> . CondL3
    (53) CondL3 -> . LPAREN CondL3 RPAREN
    (54) CondL3 -> . NOT CondR1
    (55) CondL3 -> . CondR1
    (56) CondR1 -> . LPAREN CondR1 RPAREN
    (57) CondR1 -> . CondA1 EQUAL CondA1
    (58) CondR1 -> . CondA1 LESS CondA1
    (59) CondR1 -> . CondA1 GREATER CondA1
    (60) CondR1 -> . CondA1 LESSEQUAL CondA1
    (61) CondR1 -> . CondA1 GREATEREQUAL CondA1
    (62) CondR1 -> . CondA1 DIFFERENT CondA1
    (63) CondR1 -> . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 39
    NOT             shift and go to state 43
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    Cond                           shift and go to state 38
    CondL1                         shift and go to state 40
    CondL2                         shift and go to state 41
    CondL3                         shift and go to state 42
    CondR1                         shift and go to state 44
    CondA1                         shift and go to state 45
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 27

    (78) For -> FOR . InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> FOR . InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> FOR . InicioFor TO FimFor DO Comando
    (81) For -> FOR . InicioFor DOWNTO FimFor DO Comando
    (82) InicioFor -> . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    InicioFor                      shift and go to state 55
    Comando                        shift and go to state 56
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 28

    (84) While -> WHILE . Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> WHILE . Cond DO Comando
    (45) Cond -> . LPAREN Cond RPAREN
    (46) Cond -> . CondL1
    (47) CondL1 -> . LPAREN CondL1 RPAREN
    (48) CondL1 -> . CondL1 OR CondL2
    (49) CondL1 -> . CondL2
    (50) CondL2 -> . LPAREN CondL2 RPAREN
    (51) CondL2 -> . CondL2 AND CondL3
    (52) CondL2 -> . CondL3
    (53) CondL3 -> . LPAREN CondL3 RPAREN
    (54) CondL3 -> . NOT CondR1
    (55) CondL3 -> . CondR1
    (56) CondR1 -> . LPAREN CondR1 RPAREN
    (57) CondR1 -> . CondA1 EQUAL CondA1
    (58) CondR1 -> . CondA1 LESS CondA1
    (59) CondR1 -> . CondA1 GREATER CondA1
    (60) CondR1 -> . CondA1 LESSEQUAL CondA1
    (61) CondR1 -> . CondA1 GREATEREQUAL CondA1
    (62) CondR1 -> . CondA1 DIFFERENT CondA1
    (63) CondR1 -> . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 39
    NOT             shift and go to state 43
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    Cond                           shift and go to state 57
    CondL1                         shift and go to state 40
    CondL2                         shift and go to state 41
    CondL3                         shift and go to state 42
    CondR1                         shift and go to state 44
    CondA1                         shift and go to state 45
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 29

    (10) vars -> vars var .

    IDENTIFIER      reduce using rule 10 (vars -> vars var .)
    BEGIN           reduce using rule 10 (vars -> vars var .)
    RPAREN          reduce using rule 10 (vars -> vars var .)


state 30

    (12) var -> listaVars DOISPONTOS . Tipo PONTOVIRGULA
    (13) var -> listaVars DOISPONTOS . Tipo
    (14) var -> listaVars DOISPONTOS . ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA
    (17) Tipo -> . TYPEINTEGER
    (18) Tipo -> . TYPESTRING
    (19) Tipo -> . TYPEBOOLEAN

    ARRAY           shift and go to state 59
    TYPEINTEGER     shift and go to state 60
    TYPESTRING      shift and go to state 61
    TYPEBOOLEAN     shift and go to state 62

    Tipo                           shift and go to state 58

state 31

    (16) listaVars -> listaVars VIRGULA . IDENTIFIER

    IDENTIFIER      shift and go to state 63


state 32

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction . RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA

    RPAREN          shift and go to state 64


state 33

    (7) argsFunction -> vars .
    (10) vars -> vars . var
    (12) var -> . listaVars DOISPONTOS Tipo PONTOVIRGULA
    (13) var -> . listaVars DOISPONTOS Tipo
    (14) var -> . listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA
    (15) listaVars -> . IDENTIFIER
    (16) listaVars -> . listaVars VIRGULA IDENTIFIER

    RPAREN          reduce using rule 7 (argsFunction -> vars .)
    IDENTIFIER      shift and go to state 17

    var                            shift and go to state 29
    listaVars                      shift and go to state 16

state 34

    (20) Corpo -> BEGIN Conteudo END . PONTO
    (21) Corpo -> BEGIN Conteudo END .

    PONTO           shift and go to state 65
    $end            reduce using rule 21 (Corpo -> BEGIN Conteudo END .)


state 35

    (23) Conteudo -> Conteudo Comando .

    END             reduce using rule 23 (Conteudo -> Conteudo Comando .)
    IDENTIFIER      reduce using rule 23 (Conteudo -> Conteudo Comando .)
    IF              reduce using rule 23 (Conteudo -> Conteudo Comando .)
    FOR             reduce using rule 23 (Conteudo -> Conteudo Comando .)
    WHILE           reduce using rule 23 (Conteudo -> Conteudo Comando .)
    ELSE            reduce using rule 23 (Conteudo -> Conteudo Comando .)
    TO              reduce using rule 23 (Conteudo -> Conteudo Comando .)
    DOWNTO          reduce using rule 23 (Conteudo -> Conteudo Comando .)


state 36

    (28) Comando -> IDENTIFIER ASSIGN . Valor PONTOVIRGULA
    (29) Comando -> IDENTIFIER ASSIGN . Valor
    (30) Comando -> IDENTIFIER ASSIGN . CondA1 PONTOVIRGULA
    (31) Comando -> IDENTIFIER ASSIGN . CondA1
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor

    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    LPAREN          shift and go to state 68
    IDENTIFIER      shift and go to state 54

    Valor                          shift and go to state 66
    CondA1                         shift and go to state 67
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47

state 37

    (39) Function -> IDENTIFIER LPAREN . Valores RPAREN PONTOVIRGULA
    (40) Function -> IDENTIFIER LPAREN . Valores RPAREN
    (41) Function -> IDENTIFIER LPAREN . RPAREN PONTOVIRGULA
    (42) Function -> IDENTIFIER LPAREN . RPAREN
    (76) Valores -> . Valores VIRGULA Valor
    (77) Valores -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    RPAREN          shift and go to state 70
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    Valores                        shift and go to state 69
    Valor                          shift and go to state 71
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 38

    (43) declaracaoIf -> IF Cond . THEN Conteudo
    (44) declaracaoIf -> IF Cond . THEN Conteudo ELSE Conteudo

    THEN            shift and go to state 72


state 39

    (45) Cond -> LPAREN . Cond RPAREN
    (47) CondL1 -> LPAREN . CondL1 RPAREN
    (50) CondL2 -> LPAREN . CondL2 RPAREN
    (53) CondL3 -> LPAREN . CondL3 RPAREN
    (56) CondR1 -> LPAREN . CondR1 RPAREN
    (64) CondA1 -> LPAREN . CondA1 RPAREN
    (68) CondA2 -> LPAREN . CondA2 RPAREN
    (74) CondA3 -> LPAREN . CondA3 RPAREN
    (45) Cond -> . LPAREN Cond RPAREN
    (46) Cond -> . CondL1
    (47) CondL1 -> . LPAREN CondL1 RPAREN
    (48) CondL1 -> . CondL1 OR CondL2
    (49) CondL1 -> . CondL2
    (50) CondL2 -> . LPAREN CondL2 RPAREN
    (51) CondL2 -> . CondL2 AND CondL3
    (52) CondL2 -> . CondL3
    (53) CondL3 -> . LPAREN CondL3 RPAREN
    (54) CondL3 -> . NOT CondR1
    (55) CondL3 -> . CondR1
    (56) CondR1 -> . LPAREN CondR1 RPAREN
    (57) CondR1 -> . CondA1 EQUAL CondA1
    (58) CondR1 -> . CondA1 LESS CondA1
    (59) CondR1 -> . CondA1 GREATER CondA1
    (60) CondR1 -> . CondA1 LESSEQUAL CondA1
    (61) CondR1 -> . CondA1 GREATEREQUAL CondA1
    (62) CondR1 -> . CondA1 DIFFERENT CondA1
    (63) CondR1 -> . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 39
    NOT             shift and go to state 43
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    Cond                           shift and go to state 73
    CondL1                         shift and go to state 74
    CondL2                         shift and go to state 75
    CondL3                         shift and go to state 76
    CondR1                         shift and go to state 77
    CondA1                         shift and go to state 78
    CondA2                         shift and go to state 79
    CondA3                         shift and go to state 80
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 40

    (46) Cond -> CondL1 .
    (48) CondL1 -> CondL1 . OR CondL2

    THEN            reduce using rule 46 (Cond -> CondL1 .)
    DO              reduce using rule 46 (Cond -> CondL1 .)
    OR              shift and go to state 81


state 41

    (49) CondL1 -> CondL2 .
    (51) CondL2 -> CondL2 . AND CondL3

    OR              reduce using rule 49 (CondL1 -> CondL2 .)
    THEN            reduce using rule 49 (CondL1 -> CondL2 .)
    DO              reduce using rule 49 (CondL1 -> CondL2 .)
    AND             shift and go to state 82


state 42

    (52) CondL2 -> CondL3 .

    AND             reduce using rule 52 (CondL2 -> CondL3 .)
    OR              reduce using rule 52 (CondL2 -> CondL3 .)
    THEN            reduce using rule 52 (CondL2 -> CondL3 .)
    DO              reduce using rule 52 (CondL2 -> CondL3 .)
    RPAREN          reduce using rule 52 (CondL2 -> CondL3 .)


state 43

    (54) CondL3 -> NOT . CondR1
    (56) CondR1 -> . LPAREN CondR1 RPAREN
    (57) CondR1 -> . CondA1 EQUAL CondA1
    (58) CondR1 -> . CondA1 LESS CondA1
    (59) CondR1 -> . CondA1 GREATER CondA1
    (60) CondR1 -> . CondA1 LESSEQUAL CondA1
    (61) CondR1 -> . CondA1 GREATEREQUAL CondA1
    (62) CondR1 -> . CondA1 DIFFERENT CondA1
    (63) CondR1 -> . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 84
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondR1                         shift and go to state 83
    CondA1                         shift and go to state 45
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 44

    (55) CondL3 -> CondR1 .

    AND             reduce using rule 55 (CondL3 -> CondR1 .)
    OR              reduce using rule 55 (CondL3 -> CondR1 .)
    THEN            reduce using rule 55 (CondL3 -> CondR1 .)
    DO              reduce using rule 55 (CondL3 -> CondR1 .)
    RPAREN          reduce using rule 55 (CondL3 -> CondR1 .)


state 45

    (57) CondR1 -> CondA1 . EQUAL CondA1
    (58) CondR1 -> CondA1 . LESS CondA1
    (59) CondR1 -> CondA1 . GREATER CondA1
    (60) CondR1 -> CondA1 . LESSEQUAL CondA1
    (61) CondR1 -> CondA1 . GREATEREQUAL CondA1
    (62) CondR1 -> CondA1 . DIFFERENT CondA1
    (63) CondR1 -> CondA1 .
    (65) CondA1 -> CondA1 . SUM CondA2
    (66) CondA1 -> CondA1 . SUB CondA2

    EQUAL           shift and go to state 85
    LESS            shift and go to state 86
    GREATER         shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    DIFFERENT       shift and go to state 90
    AND             reduce using rule 63 (CondR1 -> CondA1 .)
    OR              reduce using rule 63 (CondR1 -> CondA1 .)
    THEN            reduce using rule 63 (CondR1 -> CondA1 .)
    DO              reduce using rule 63 (CondR1 -> CondA1 .)
    RPAREN          reduce using rule 63 (CondR1 -> CondA1 .)
    SUM             shift and go to state 91
    SUB             shift and go to state 92


state 46

    (67) CondA1 -> CondA2 .
    (69) CondA2 -> CondA2 . MUL CondA3
    (70) CondA2 -> CondA2 . DIVREAL CondA3
    (71) CondA2 -> CondA2 . DIV CondA3
    (72) CondA2 -> CondA2 . MOD CondA3

    EQUAL           reduce using rule 67 (CondA1 -> CondA2 .)
    LESS            reduce using rule 67 (CondA1 -> CondA2 .)
    GREATER         reduce using rule 67 (CondA1 -> CondA2 .)
    LESSEQUAL       reduce using rule 67 (CondA1 -> CondA2 .)
    GREATEREQUAL    reduce using rule 67 (CondA1 -> CondA2 .)
    DIFFERENT       reduce using rule 67 (CondA1 -> CondA2 .)
    SUM             reduce using rule 67 (CondA1 -> CondA2 .)
    SUB             reduce using rule 67 (CondA1 -> CondA2 .)
    AND             reduce using rule 67 (CondA1 -> CondA2 .)
    OR              reduce using rule 67 (CondA1 -> CondA2 .)
    THEN            reduce using rule 67 (CondA1 -> CondA2 .)
    DO              reduce using rule 67 (CondA1 -> CondA2 .)
    PONTOVIRGULA    reduce using rule 67 (CondA1 -> CondA2 .)
    END             reduce using rule 67 (CondA1 -> CondA2 .)
    IDENTIFIER      reduce using rule 67 (CondA1 -> CondA2 .)
    IF              reduce using rule 67 (CondA1 -> CondA2 .)
    FOR             reduce using rule 67 (CondA1 -> CondA2 .)
    WHILE           reduce using rule 67 (CondA1 -> CondA2 .)
    TO              reduce using rule 67 (CondA1 -> CondA2 .)
    DOWNTO          reduce using rule 67 (CondA1 -> CondA2 .)
    ELSE            reduce using rule 67 (CondA1 -> CondA2 .)
    RPAREN          reduce using rule 67 (CondA1 -> CondA2 .)
    MUL             shift and go to state 93
    DIVREAL         shift and go to state 94
    DIV             shift and go to state 95
    MOD             shift and go to state 96


state 47

    (73) CondA2 -> CondA3 .

    MUL             reduce using rule 73 (CondA2 -> CondA3 .)
    DIVREAL         reduce using rule 73 (CondA2 -> CondA3 .)
    DIV             reduce using rule 73 (CondA2 -> CondA3 .)
    MOD             reduce using rule 73 (CondA2 -> CondA3 .)
    EQUAL           reduce using rule 73 (CondA2 -> CondA3 .)
    LESS            reduce using rule 73 (CondA2 -> CondA3 .)
    GREATER         reduce using rule 73 (CondA2 -> CondA3 .)
    LESSEQUAL       reduce using rule 73 (CondA2 -> CondA3 .)
    GREATEREQUAL    reduce using rule 73 (CondA2 -> CondA3 .)
    DIFFERENT       reduce using rule 73 (CondA2 -> CondA3 .)
    SUM             reduce using rule 73 (CondA2 -> CondA3 .)
    SUB             reduce using rule 73 (CondA2 -> CondA3 .)
    AND             reduce using rule 73 (CondA2 -> CondA3 .)
    OR              reduce using rule 73 (CondA2 -> CondA3 .)
    THEN            reduce using rule 73 (CondA2 -> CondA3 .)
    DO              reduce using rule 73 (CondA2 -> CondA3 .)
    PONTOVIRGULA    reduce using rule 73 (CondA2 -> CondA3 .)
    END             reduce using rule 73 (CondA2 -> CondA3 .)
    IDENTIFIER      reduce using rule 73 (CondA2 -> CondA3 .)
    IF              reduce using rule 73 (CondA2 -> CondA3 .)
    FOR             reduce using rule 73 (CondA2 -> CondA3 .)
    WHILE           reduce using rule 73 (CondA2 -> CondA3 .)
    TO              reduce using rule 73 (CondA2 -> CondA3 .)
    DOWNTO          reduce using rule 73 (CondA2 -> CondA3 .)
    ELSE            reduce using rule 73 (CondA2 -> CondA3 .)
    RPAREN          reduce using rule 73 (CondA2 -> CondA3 .)


state 48

    (75) CondA3 -> Valor .

    MUL             reduce using rule 75 (CondA3 -> Valor .)
    DIVREAL         reduce using rule 75 (CondA3 -> Valor .)
    DIV             reduce using rule 75 (CondA3 -> Valor .)
    MOD             reduce using rule 75 (CondA3 -> Valor .)
    EQUAL           reduce using rule 75 (CondA3 -> Valor .)
    LESS            reduce using rule 75 (CondA3 -> Valor .)
    GREATER         reduce using rule 75 (CondA3 -> Valor .)
    LESSEQUAL       reduce using rule 75 (CondA3 -> Valor .)
    GREATEREQUAL    reduce using rule 75 (CondA3 -> Valor .)
    DIFFERENT       reduce using rule 75 (CondA3 -> Valor .)
    SUM             reduce using rule 75 (CondA3 -> Valor .)
    SUB             reduce using rule 75 (CondA3 -> Valor .)
    AND             reduce using rule 75 (CondA3 -> Valor .)
    OR              reduce using rule 75 (CondA3 -> Valor .)
    THEN            reduce using rule 75 (CondA3 -> Valor .)
    DO              reduce using rule 75 (CondA3 -> Valor .)
    RPAREN          reduce using rule 75 (CondA3 -> Valor .)
    PONTOVIRGULA    reduce using rule 75 (CondA3 -> Valor .)
    END             reduce using rule 75 (CondA3 -> Valor .)
    IDENTIFIER      reduce using rule 75 (CondA3 -> Valor .)
    IF              reduce using rule 75 (CondA3 -> Valor .)
    FOR             reduce using rule 75 (CondA3 -> Valor .)
    WHILE           reduce using rule 75 (CondA3 -> Valor .)
    TO              reduce using rule 75 (CondA3 -> Valor .)
    DOWNTO          reduce using rule 75 (CondA3 -> Valor .)
    ELSE            reduce using rule 75 (CondA3 -> Valor .)


state 49

    (34) Valor -> Identifier .

    MUL             reduce using rule 34 (Valor -> Identifier .)
    DIVREAL         reduce using rule 34 (Valor -> Identifier .)
    DIV             reduce using rule 34 (Valor -> Identifier .)
    MOD             reduce using rule 34 (Valor -> Identifier .)
    EQUAL           reduce using rule 34 (Valor -> Identifier .)
    LESS            reduce using rule 34 (Valor -> Identifier .)
    GREATER         reduce using rule 34 (Valor -> Identifier .)
    LESSEQUAL       reduce using rule 34 (Valor -> Identifier .)
    GREATEREQUAL    reduce using rule 34 (Valor -> Identifier .)
    DIFFERENT       reduce using rule 34 (Valor -> Identifier .)
    SUM             reduce using rule 34 (Valor -> Identifier .)
    SUB             reduce using rule 34 (Valor -> Identifier .)
    AND             reduce using rule 34 (Valor -> Identifier .)
    OR              reduce using rule 34 (Valor -> Identifier .)
    THEN            reduce using rule 34 (Valor -> Identifier .)
    DO              reduce using rule 34 (Valor -> Identifier .)
    PONTOVIRGULA    reduce using rule 34 (Valor -> Identifier .)
    END             reduce using rule 34 (Valor -> Identifier .)
    IDENTIFIER      reduce using rule 34 (Valor -> Identifier .)
    IF              reduce using rule 34 (Valor -> Identifier .)
    FOR             reduce using rule 34 (Valor -> Identifier .)
    WHILE           reduce using rule 34 (Valor -> Identifier .)
    TO              reduce using rule 34 (Valor -> Identifier .)
    DOWNTO          reduce using rule 34 (Valor -> Identifier .)
    ELSE            reduce using rule 34 (Valor -> Identifier .)
    RPAREN          reduce using rule 34 (Valor -> Identifier .)
    VIRGULA         reduce using rule 34 (Valor -> Identifier .)
    RBRACKET        reduce using rule 34 (Valor -> Identifier .)


state 50

    (35) Valor -> NUMBER .

    MUL             reduce using rule 35 (Valor -> NUMBER .)
    DIVREAL         reduce using rule 35 (Valor -> NUMBER .)
    DIV             reduce using rule 35 (Valor -> NUMBER .)
    MOD             reduce using rule 35 (Valor -> NUMBER .)
    EQUAL           reduce using rule 35 (Valor -> NUMBER .)
    LESS            reduce using rule 35 (Valor -> NUMBER .)
    GREATER         reduce using rule 35 (Valor -> NUMBER .)
    LESSEQUAL       reduce using rule 35 (Valor -> NUMBER .)
    GREATEREQUAL    reduce using rule 35 (Valor -> NUMBER .)
    DIFFERENT       reduce using rule 35 (Valor -> NUMBER .)
    SUM             reduce using rule 35 (Valor -> NUMBER .)
    SUB             reduce using rule 35 (Valor -> NUMBER .)
    AND             reduce using rule 35 (Valor -> NUMBER .)
    OR              reduce using rule 35 (Valor -> NUMBER .)
    THEN            reduce using rule 35 (Valor -> NUMBER .)
    DO              reduce using rule 35 (Valor -> NUMBER .)
    PONTOVIRGULA    reduce using rule 35 (Valor -> NUMBER .)
    END             reduce using rule 35 (Valor -> NUMBER .)
    IDENTIFIER      reduce using rule 35 (Valor -> NUMBER .)
    IF              reduce using rule 35 (Valor -> NUMBER .)
    FOR             reduce using rule 35 (Valor -> NUMBER .)
    WHILE           reduce using rule 35 (Valor -> NUMBER .)
    TO              reduce using rule 35 (Valor -> NUMBER .)
    DOWNTO          reduce using rule 35 (Valor -> NUMBER .)
    ELSE            reduce using rule 35 (Valor -> NUMBER .)
    RPAREN          reduce using rule 35 (Valor -> NUMBER .)
    VIRGULA         reduce using rule 35 (Valor -> NUMBER .)
    RBRACKET        reduce using rule 35 (Valor -> NUMBER .)


state 51

    (36) Valor -> BOOLEAN .

    MUL             reduce using rule 36 (Valor -> BOOLEAN .)
    DIVREAL         reduce using rule 36 (Valor -> BOOLEAN .)
    DIV             reduce using rule 36 (Valor -> BOOLEAN .)
    MOD             reduce using rule 36 (Valor -> BOOLEAN .)
    EQUAL           reduce using rule 36 (Valor -> BOOLEAN .)
    LESS            reduce using rule 36 (Valor -> BOOLEAN .)
    GREATER         reduce using rule 36 (Valor -> BOOLEAN .)
    LESSEQUAL       reduce using rule 36 (Valor -> BOOLEAN .)
    GREATEREQUAL    reduce using rule 36 (Valor -> BOOLEAN .)
    DIFFERENT       reduce using rule 36 (Valor -> BOOLEAN .)
    SUM             reduce using rule 36 (Valor -> BOOLEAN .)
    SUB             reduce using rule 36 (Valor -> BOOLEAN .)
    AND             reduce using rule 36 (Valor -> BOOLEAN .)
    OR              reduce using rule 36 (Valor -> BOOLEAN .)
    THEN            reduce using rule 36 (Valor -> BOOLEAN .)
    DO              reduce using rule 36 (Valor -> BOOLEAN .)
    PONTOVIRGULA    reduce using rule 36 (Valor -> BOOLEAN .)
    END             reduce using rule 36 (Valor -> BOOLEAN .)
    IDENTIFIER      reduce using rule 36 (Valor -> BOOLEAN .)
    IF              reduce using rule 36 (Valor -> BOOLEAN .)
    FOR             reduce using rule 36 (Valor -> BOOLEAN .)
    WHILE           reduce using rule 36 (Valor -> BOOLEAN .)
    TO              reduce using rule 36 (Valor -> BOOLEAN .)
    DOWNTO          reduce using rule 36 (Valor -> BOOLEAN .)
    ELSE            reduce using rule 36 (Valor -> BOOLEAN .)
    RPAREN          reduce using rule 36 (Valor -> BOOLEAN .)
    VIRGULA         reduce using rule 36 (Valor -> BOOLEAN .)
    RBRACKET        reduce using rule 36 (Valor -> BOOLEAN .)


state 52

    (37) Valor -> STRING .

    MUL             reduce using rule 37 (Valor -> STRING .)
    DIVREAL         reduce using rule 37 (Valor -> STRING .)
    DIV             reduce using rule 37 (Valor -> STRING .)
    MOD             reduce using rule 37 (Valor -> STRING .)
    EQUAL           reduce using rule 37 (Valor -> STRING .)
    LESS            reduce using rule 37 (Valor -> STRING .)
    GREATER         reduce using rule 37 (Valor -> STRING .)
    LESSEQUAL       reduce using rule 37 (Valor -> STRING .)
    GREATEREQUAL    reduce using rule 37 (Valor -> STRING .)
    DIFFERENT       reduce using rule 37 (Valor -> STRING .)
    SUM             reduce using rule 37 (Valor -> STRING .)
    SUB             reduce using rule 37 (Valor -> STRING .)
    AND             reduce using rule 37 (Valor -> STRING .)
    OR              reduce using rule 37 (Valor -> STRING .)
    THEN            reduce using rule 37 (Valor -> STRING .)
    DO              reduce using rule 37 (Valor -> STRING .)
    PONTOVIRGULA    reduce using rule 37 (Valor -> STRING .)
    END             reduce using rule 37 (Valor -> STRING .)
    IDENTIFIER      reduce using rule 37 (Valor -> STRING .)
    IF              reduce using rule 37 (Valor -> STRING .)
    FOR             reduce using rule 37 (Valor -> STRING .)
    WHILE           reduce using rule 37 (Valor -> STRING .)
    TO              reduce using rule 37 (Valor -> STRING .)
    DOWNTO          reduce using rule 37 (Valor -> STRING .)
    ELSE            reduce using rule 37 (Valor -> STRING .)
    RPAREN          reduce using rule 37 (Valor -> STRING .)
    VIRGULA         reduce using rule 37 (Valor -> STRING .)
    RBRACKET        reduce using rule 37 (Valor -> STRING .)


state 53

    (38) Valor -> Function .

    MUL             reduce using rule 38 (Valor -> Function .)
    DIVREAL         reduce using rule 38 (Valor -> Function .)
    DIV             reduce using rule 38 (Valor -> Function .)
    MOD             reduce using rule 38 (Valor -> Function .)
    EQUAL           reduce using rule 38 (Valor -> Function .)
    LESS            reduce using rule 38 (Valor -> Function .)
    GREATER         reduce using rule 38 (Valor -> Function .)
    LESSEQUAL       reduce using rule 38 (Valor -> Function .)
    GREATEREQUAL    reduce using rule 38 (Valor -> Function .)
    DIFFERENT       reduce using rule 38 (Valor -> Function .)
    SUM             reduce using rule 38 (Valor -> Function .)
    SUB             reduce using rule 38 (Valor -> Function .)
    AND             reduce using rule 38 (Valor -> Function .)
    OR              reduce using rule 38 (Valor -> Function .)
    THEN            reduce using rule 38 (Valor -> Function .)
    DO              reduce using rule 38 (Valor -> Function .)
    PONTOVIRGULA    reduce using rule 38 (Valor -> Function .)
    END             reduce using rule 38 (Valor -> Function .)
    IDENTIFIER      reduce using rule 38 (Valor -> Function .)
    IF              reduce using rule 38 (Valor -> Function .)
    FOR             reduce using rule 38 (Valor -> Function .)
    WHILE           reduce using rule 38 (Valor -> Function .)
    TO              reduce using rule 38 (Valor -> Function .)
    DOWNTO          reduce using rule 38 (Valor -> Function .)
    ELSE            reduce using rule 38 (Valor -> Function .)
    RPAREN          reduce using rule 38 (Valor -> Function .)
    VIRGULA         reduce using rule 38 (Valor -> Function .)
    RBRACKET        reduce using rule 38 (Valor -> Function .)


state 54

    (32) Identifier -> IDENTIFIER .
    (33) Identifier -> IDENTIFIER . LBRACKET Valor RBRACKET
    (39) Function -> IDENTIFIER . LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> IDENTIFIER . LPAREN Valores RPAREN
    (41) Function -> IDENTIFIER . LPAREN RPAREN PONTOVIRGULA
    (42) Function -> IDENTIFIER . LPAREN RPAREN

    MUL             reduce using rule 32 (Identifier -> IDENTIFIER .)
    DIVREAL         reduce using rule 32 (Identifier -> IDENTIFIER .)
    DIV             reduce using rule 32 (Identifier -> IDENTIFIER .)
    MOD             reduce using rule 32 (Identifier -> IDENTIFIER .)
    EQUAL           reduce using rule 32 (Identifier -> IDENTIFIER .)
    LESS            reduce using rule 32 (Identifier -> IDENTIFIER .)
    GREATER         reduce using rule 32 (Identifier -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 32 (Identifier -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 32 (Identifier -> IDENTIFIER .)
    DIFFERENT       reduce using rule 32 (Identifier -> IDENTIFIER .)
    SUM             reduce using rule 32 (Identifier -> IDENTIFIER .)
    SUB             reduce using rule 32 (Identifier -> IDENTIFIER .)
    AND             reduce using rule 32 (Identifier -> IDENTIFIER .)
    OR              reduce using rule 32 (Identifier -> IDENTIFIER .)
    THEN            reduce using rule 32 (Identifier -> IDENTIFIER .)
    DO              reduce using rule 32 (Identifier -> IDENTIFIER .)
    PONTOVIRGULA    reduce using rule 32 (Identifier -> IDENTIFIER .)
    END             reduce using rule 32 (Identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 32 (Identifier -> IDENTIFIER .)
    IF              reduce using rule 32 (Identifier -> IDENTIFIER .)
    FOR             reduce using rule 32 (Identifier -> IDENTIFIER .)
    WHILE           reduce using rule 32 (Identifier -> IDENTIFIER .)
    TO              reduce using rule 32 (Identifier -> IDENTIFIER .)
    DOWNTO          reduce using rule 32 (Identifier -> IDENTIFIER .)
    ELSE            reduce using rule 32 (Identifier -> IDENTIFIER .)
    RPAREN          reduce using rule 32 (Identifier -> IDENTIFIER .)
    VIRGULA         reduce using rule 32 (Identifier -> IDENTIFIER .)
    RBRACKET        reduce using rule 32 (Identifier -> IDENTIFIER .)
    LBRACKET        shift and go to state 97
    LPAREN          shift and go to state 37


state 55

    (78) For -> FOR InicioFor . TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> FOR InicioFor . DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> FOR InicioFor . TO FimFor DO Comando
    (81) For -> FOR InicioFor . DOWNTO FimFor DO Comando

    TO              shift and go to state 98
    DOWNTO          shift and go to state 99


state 56

    (82) InicioFor -> Comando .

    TO              reduce using rule 82 (InicioFor -> Comando .)
    DOWNTO          reduce using rule 82 (InicioFor -> Comando .)


state 57

    (84) While -> WHILE Cond . DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> WHILE Cond . DO Comando

    DO              shift and go to state 100


state 58

    (12) var -> listaVars DOISPONTOS Tipo . PONTOVIRGULA
    (13) var -> listaVars DOISPONTOS Tipo .

    PONTOVIRGULA    shift and go to state 101
    IDENTIFIER      reduce using rule 13 (var -> listaVars DOISPONTOS Tipo .)
    BEGIN           reduce using rule 13 (var -> listaVars DOISPONTOS Tipo .)
    RPAREN          reduce using rule 13 (var -> listaVars DOISPONTOS Tipo .)


state 59

    (14) var -> listaVars DOISPONTOS ARRAY . LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA

    LBRACKET        shift and go to state 102


state 60

    (17) Tipo -> TYPEINTEGER .

    PONTOVIRGULA    reduce using rule 17 (Tipo -> TYPEINTEGER .)
    IDENTIFIER      reduce using rule 17 (Tipo -> TYPEINTEGER .)
    BEGIN           reduce using rule 17 (Tipo -> TYPEINTEGER .)
    RPAREN          reduce using rule 17 (Tipo -> TYPEINTEGER .)


state 61

    (18) Tipo -> TYPESTRING .

    PONTOVIRGULA    reduce using rule 18 (Tipo -> TYPESTRING .)
    IDENTIFIER      reduce using rule 18 (Tipo -> TYPESTRING .)
    BEGIN           reduce using rule 18 (Tipo -> TYPESTRING .)
    RPAREN          reduce using rule 18 (Tipo -> TYPESTRING .)


state 62

    (19) Tipo -> TYPEBOOLEAN .

    PONTOVIRGULA    reduce using rule 19 (Tipo -> TYPEBOOLEAN .)
    IDENTIFIER      reduce using rule 19 (Tipo -> TYPEBOOLEAN .)
    BEGIN           reduce using rule 19 (Tipo -> TYPEBOOLEAN .)
    RPAREN          reduce using rule 19 (Tipo -> TYPEBOOLEAN .)


state 63

    (16) listaVars -> listaVars VIRGULA IDENTIFIER .

    DOISPONTOS      reduce using rule 16 (listaVars -> listaVars VIRGULA IDENTIFIER .)
    VIRGULA         reduce using rule 16 (listaVars -> listaVars VIRGULA IDENTIFIER .)


state 64

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN . DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA

    DOISPONTOS      shift and go to state 103


state 65

    (20) Corpo -> BEGIN Conteudo END PONTO .

    $end            reduce using rule 20 (Corpo -> BEGIN Conteudo END PONTO .)


state 66

    (28) Comando -> IDENTIFIER ASSIGN Valor . PONTOVIRGULA
    (29) Comando -> IDENTIFIER ASSIGN Valor .
    (75) CondA3 -> Valor .

  ! shift/reduce conflict for PONTOVIRGULA resolved as shift
  ! reduce/reduce conflict for END resolved using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
  ! reduce/reduce conflict for IF resolved using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
  ! reduce/reduce conflict for FOR resolved using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
  ! reduce/reduce conflict for WHILE resolved using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
  ! reduce/reduce conflict for TO resolved using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
  ! reduce/reduce conflict for DOWNTO resolved using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
  ! reduce/reduce conflict for ELSE resolved using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
    PONTOVIRGULA    shift and go to state 104
    END             reduce using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
    IDENTIFIER      reduce using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
    IF              reduce using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
    FOR             reduce using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
    WHILE           reduce using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
    TO              reduce using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
    DOWNTO          reduce using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
    ELSE            reduce using rule 29 (Comando -> IDENTIFIER ASSIGN Valor .)
    MUL             reduce using rule 75 (CondA3 -> Valor .)
    DIVREAL         reduce using rule 75 (CondA3 -> Valor .)
    DIV             reduce using rule 75 (CondA3 -> Valor .)
    MOD             reduce using rule 75 (CondA3 -> Valor .)
    SUM             reduce using rule 75 (CondA3 -> Valor .)
    SUB             reduce using rule 75 (CondA3 -> Valor .)

  ! PONTOVIRGULA    [ reduce using rule 75 (CondA3 -> Valor .) ]
  ! END             [ reduce using rule 75 (CondA3 -> Valor .) ]
  ! IDENTIFIER      [ reduce using rule 75 (CondA3 -> Valor .) ]
  ! IF              [ reduce using rule 75 (CondA3 -> Valor .) ]
  ! FOR             [ reduce using rule 75 (CondA3 -> Valor .) ]
  ! WHILE           [ reduce using rule 75 (CondA3 -> Valor .) ]
  ! TO              [ reduce using rule 75 (CondA3 -> Valor .) ]
  ! DOWNTO          [ reduce using rule 75 (CondA3 -> Valor .) ]
  ! ELSE            [ reduce using rule 75 (CondA3 -> Valor .) ]


state 67

    (30) Comando -> IDENTIFIER ASSIGN CondA1 . PONTOVIRGULA
    (31) Comando -> IDENTIFIER ASSIGN CondA1 .
    (65) CondA1 -> CondA1 . SUM CondA2
    (66) CondA1 -> CondA1 . SUB CondA2

    PONTOVIRGULA    shift and go to state 105
    END             reduce using rule 31 (Comando -> IDENTIFIER ASSIGN CondA1 .)
    IDENTIFIER      reduce using rule 31 (Comando -> IDENTIFIER ASSIGN CondA1 .)
    IF              reduce using rule 31 (Comando -> IDENTIFIER ASSIGN CondA1 .)
    FOR             reduce using rule 31 (Comando -> IDENTIFIER ASSIGN CondA1 .)
    WHILE           reduce using rule 31 (Comando -> IDENTIFIER ASSIGN CondA1 .)
    TO              reduce using rule 31 (Comando -> IDENTIFIER ASSIGN CondA1 .)
    DOWNTO          reduce using rule 31 (Comando -> IDENTIFIER ASSIGN CondA1 .)
    ELSE            reduce using rule 31 (Comando -> IDENTIFIER ASSIGN CondA1 .)
    SUM             shift and go to state 91
    SUB             shift and go to state 92


state 68

    (64) CondA1 -> LPAREN . CondA1 RPAREN
    (68) CondA2 -> LPAREN . CondA2 RPAREN
    (74) CondA3 -> LPAREN . CondA3 RPAREN
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 68
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA1                         shift and go to state 106
    CondA2                         shift and go to state 79
    CondA3                         shift and go to state 80
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 69

    (39) Function -> IDENTIFIER LPAREN Valores . RPAREN PONTOVIRGULA
    (40) Function -> IDENTIFIER LPAREN Valores . RPAREN
    (76) Valores -> Valores . VIRGULA Valor

    RPAREN          shift and go to state 107
    VIRGULA         shift and go to state 108


state 70

    (41) Function -> IDENTIFIER LPAREN RPAREN . PONTOVIRGULA
    (42) Function -> IDENTIFIER LPAREN RPAREN .

  ! shift/reduce conflict for PONTOVIRGULA resolved as shift
    PONTOVIRGULA    shift and go to state 109
    END             reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    IF              reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    FOR             reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    WHILE           reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    MUL             reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    DIVREAL         reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    DIV             reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    MOD             reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    LESS            reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    GREATER         reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    LESSEQUAL       reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    GREATEREQUAL    reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    DIFFERENT       reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    SUM             reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    SUB             reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    THEN            reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    TO              reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    DOWNTO          reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    DO              reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    VIRGULA         reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .)

  ! PONTOVIRGULA    [ reduce using rule 42 (Function -> IDENTIFIER LPAREN RPAREN .) ]


state 71

    (77) Valores -> Valor .

    RPAREN          reduce using rule 77 (Valores -> Valor .)
    VIRGULA         reduce using rule 77 (Valores -> Valor .)


state 72

    (43) declaracaoIf -> IF Cond THEN . Conteudo
    (44) declaracaoIf -> IF Cond THEN . Conteudo ELSE Conteudo
    (22) Conteudo -> . Comando
    (23) Conteudo -> . Conteudo Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Conteudo                       shift and go to state 110
    Comando                        shift and go to state 20
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 73

    (45) Cond -> LPAREN Cond . RPAREN

    RPAREN          shift and go to state 111


state 74

    (47) CondL1 -> LPAREN CondL1 . RPAREN
    (46) Cond -> CondL1 .
    (48) CondL1 -> CondL1 . OR CondL2

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 112
    OR              shift and go to state 81

  ! RPAREN          [ reduce using rule 46 (Cond -> CondL1 .) ]


state 75

    (50) CondL2 -> LPAREN CondL2 . RPAREN
    (49) CondL1 -> CondL2 .
    (51) CondL2 -> CondL2 . AND CondL3

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 113
    OR              reduce using rule 49 (CondL1 -> CondL2 .)
    AND             shift and go to state 82

  ! RPAREN          [ reduce using rule 49 (CondL1 -> CondL2 .) ]


state 76

    (53) CondL3 -> LPAREN CondL3 . RPAREN
    (52) CondL2 -> CondL3 .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 114
    AND             reduce using rule 52 (CondL2 -> CondL3 .)
    OR              reduce using rule 52 (CondL2 -> CondL3 .)

  ! RPAREN          [ reduce using rule 52 (CondL2 -> CondL3 .) ]


state 77

    (56) CondR1 -> LPAREN CondR1 . RPAREN
    (55) CondL3 -> CondR1 .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 115
    AND             reduce using rule 55 (CondL3 -> CondR1 .)
    OR              reduce using rule 55 (CondL3 -> CondR1 .)

  ! RPAREN          [ reduce using rule 55 (CondL3 -> CondR1 .) ]


state 78

    (64) CondA1 -> LPAREN CondA1 . RPAREN
    (57) CondR1 -> CondA1 . EQUAL CondA1
    (58) CondR1 -> CondA1 . LESS CondA1
    (59) CondR1 -> CondA1 . GREATER CondA1
    (60) CondR1 -> CondA1 . LESSEQUAL CondA1
    (61) CondR1 -> CondA1 . GREATEREQUAL CondA1
    (62) CondR1 -> CondA1 . DIFFERENT CondA1
    (63) CondR1 -> CondA1 .
    (65) CondA1 -> CondA1 . SUM CondA2
    (66) CondA1 -> CondA1 . SUB CondA2

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 116
    EQUAL           shift and go to state 85
    LESS            shift and go to state 86
    GREATER         shift and go to state 87
    LESSEQUAL       shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    DIFFERENT       shift and go to state 90
    AND             reduce using rule 63 (CondR1 -> CondA1 .)
    OR              reduce using rule 63 (CondR1 -> CondA1 .)
    SUM             shift and go to state 91
    SUB             shift and go to state 92

  ! RPAREN          [ reduce using rule 63 (CondR1 -> CondA1 .) ]


state 79

    (68) CondA2 -> LPAREN CondA2 . RPAREN
    (67) CondA1 -> CondA2 .
    (69) CondA2 -> CondA2 . MUL CondA3
    (70) CondA2 -> CondA2 . DIVREAL CondA3
    (71) CondA2 -> CondA2 . DIV CondA3
    (72) CondA2 -> CondA2 . MOD CondA3

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 117
    EQUAL           reduce using rule 67 (CondA1 -> CondA2 .)
    LESS            reduce using rule 67 (CondA1 -> CondA2 .)
    GREATER         reduce using rule 67 (CondA1 -> CondA2 .)
    LESSEQUAL       reduce using rule 67 (CondA1 -> CondA2 .)
    GREATEREQUAL    reduce using rule 67 (CondA1 -> CondA2 .)
    DIFFERENT       reduce using rule 67 (CondA1 -> CondA2 .)
    SUM             reduce using rule 67 (CondA1 -> CondA2 .)
    SUB             reduce using rule 67 (CondA1 -> CondA2 .)
    AND             reduce using rule 67 (CondA1 -> CondA2 .)
    OR              reduce using rule 67 (CondA1 -> CondA2 .)
    MUL             shift and go to state 93
    DIVREAL         shift and go to state 94
    DIV             shift and go to state 95
    MOD             shift and go to state 96

  ! RPAREN          [ reduce using rule 67 (CondA1 -> CondA2 .) ]


state 80

    (74) CondA3 -> LPAREN CondA3 . RPAREN
    (73) CondA2 -> CondA3 .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 118
    MUL             reduce using rule 73 (CondA2 -> CondA3 .)
    DIVREAL         reduce using rule 73 (CondA2 -> CondA3 .)
    DIV             reduce using rule 73 (CondA2 -> CondA3 .)
    MOD             reduce using rule 73 (CondA2 -> CondA3 .)
    EQUAL           reduce using rule 73 (CondA2 -> CondA3 .)
    LESS            reduce using rule 73 (CondA2 -> CondA3 .)
    GREATER         reduce using rule 73 (CondA2 -> CondA3 .)
    LESSEQUAL       reduce using rule 73 (CondA2 -> CondA3 .)
    GREATEREQUAL    reduce using rule 73 (CondA2 -> CondA3 .)
    DIFFERENT       reduce using rule 73 (CondA2 -> CondA3 .)
    SUM             reduce using rule 73 (CondA2 -> CondA3 .)
    SUB             reduce using rule 73 (CondA2 -> CondA3 .)
    AND             reduce using rule 73 (CondA2 -> CondA3 .)
    OR              reduce using rule 73 (CondA2 -> CondA3 .)

  ! RPAREN          [ reduce using rule 73 (CondA2 -> CondA3 .) ]


state 81

    (48) CondL1 -> CondL1 OR . CondL2
    (50) CondL2 -> . LPAREN CondL2 RPAREN
    (51) CondL2 -> . CondL2 AND CondL3
    (52) CondL2 -> . CondL3
    (53) CondL3 -> . LPAREN CondL3 RPAREN
    (54) CondL3 -> . NOT CondR1
    (55) CondL3 -> . CondR1
    (56) CondR1 -> . LPAREN CondR1 RPAREN
    (57) CondR1 -> . CondA1 EQUAL CondA1
    (58) CondR1 -> . CondA1 LESS CondA1
    (59) CondR1 -> . CondA1 GREATER CondA1
    (60) CondR1 -> . CondA1 LESSEQUAL CondA1
    (61) CondR1 -> . CondA1 GREATEREQUAL CondA1
    (62) CondR1 -> . CondA1 DIFFERENT CondA1
    (63) CondR1 -> . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 120
    NOT             shift and go to state 43
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondL2                         shift and go to state 119
    CondL3                         shift and go to state 42
    CondR1                         shift and go to state 44
    CondA1                         shift and go to state 45
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 82

    (51) CondL2 -> CondL2 AND . CondL3
    (53) CondL3 -> . LPAREN CondL3 RPAREN
    (54) CondL3 -> . NOT CondR1
    (55) CondL3 -> . CondR1
    (56) CondR1 -> . LPAREN CondR1 RPAREN
    (57) CondR1 -> . CondA1 EQUAL CondA1
    (58) CondR1 -> . CondA1 LESS CondA1
    (59) CondR1 -> . CondA1 GREATER CondA1
    (60) CondR1 -> . CondA1 LESSEQUAL CondA1
    (61) CondR1 -> . CondA1 GREATEREQUAL CondA1
    (62) CondR1 -> . CondA1 DIFFERENT CondA1
    (63) CondR1 -> . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 122
    NOT             shift and go to state 43
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondL3                         shift and go to state 121
    CondR1                         shift and go to state 44
    CondA1                         shift and go to state 45
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 83

    (54) CondL3 -> NOT CondR1 .

    AND             reduce using rule 54 (CondL3 -> NOT CondR1 .)
    OR              reduce using rule 54 (CondL3 -> NOT CondR1 .)
    THEN            reduce using rule 54 (CondL3 -> NOT CondR1 .)
    DO              reduce using rule 54 (CondL3 -> NOT CondR1 .)
    RPAREN          reduce using rule 54 (CondL3 -> NOT CondR1 .)


state 84

    (56) CondR1 -> LPAREN . CondR1 RPAREN
    (64) CondA1 -> LPAREN . CondA1 RPAREN
    (68) CondA2 -> LPAREN . CondA2 RPAREN
    (74) CondA3 -> LPAREN . CondA3 RPAREN
    (56) CondR1 -> . LPAREN CondR1 RPAREN
    (57) CondR1 -> . CondA1 EQUAL CondA1
    (58) CondR1 -> . CondA1 LESS CondA1
    (59) CondR1 -> . CondA1 GREATER CondA1
    (60) CondR1 -> . CondA1 LESSEQUAL CondA1
    (61) CondR1 -> . CondA1 GREATEREQUAL CondA1
    (62) CondR1 -> . CondA1 DIFFERENT CondA1
    (63) CondR1 -> . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 84
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondR1                         shift and go to state 123
    CondA1                         shift and go to state 78
    CondA2                         shift and go to state 79
    CondA3                         shift and go to state 80
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 85

    (57) CondR1 -> CondA1 EQUAL . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 68
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA1                         shift and go to state 124
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 86

    (58) CondR1 -> CondA1 LESS . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 68
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA1                         shift and go to state 125
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 87

    (59) CondR1 -> CondA1 GREATER . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 68
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA1                         shift and go to state 126
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 88

    (60) CondR1 -> CondA1 LESSEQUAL . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 68
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA1                         shift and go to state 127
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 89

    (61) CondR1 -> CondA1 GREATEREQUAL . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 68
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA1                         shift and go to state 128
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 90

    (62) CondR1 -> CondA1 DIFFERENT . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 68
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA1                         shift and go to state 129
    CondA2                         shift and go to state 46
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 91

    (65) CondA1 -> CondA1 SUM . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 131
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA2                         shift and go to state 130
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 92

    (66) CondA1 -> CondA1 SUB . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 131
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA2                         shift and go to state 132
    CondA3                         shift and go to state 47
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 93

    (69) CondA2 -> CondA2 MUL . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 134
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA3                         shift and go to state 133
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 94

    (70) CondA2 -> CondA2 DIVREAL . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 134
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA3                         shift and go to state 135
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 95

    (71) CondA2 -> CondA2 DIV . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 134
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA3                         shift and go to state 136
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 96

    (72) CondA2 -> CondA2 MOD . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 134
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA3                         shift and go to state 137
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 97

    (33) Identifier -> IDENTIFIER LBRACKET . Valor RBRACKET
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    Valor                          shift and go to state 138
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 98

    (78) For -> FOR InicioFor TO . FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> FOR InicioFor TO . FimFor DO Comando
    (83) FimFor -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    FimFor                         shift and go to state 139
    Valor                          shift and go to state 140
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 99

    (79) For -> FOR InicioFor DOWNTO . FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (81) For -> FOR InicioFor DOWNTO . FimFor DO Comando
    (83) FimFor -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    FimFor                         shift and go to state 141
    Valor                          shift and go to state 140
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 100

    (84) While -> WHILE Cond DO . BEGIN Conteudo END PONTOVIRGULA
    (85) While -> WHILE Cond DO . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    BEGIN           shift and go to state 142
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Comando                        shift and go to state 143
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 101

    (12) var -> listaVars DOISPONTOS Tipo PONTOVIRGULA .

    IDENTIFIER      reduce using rule 12 (var -> listaVars DOISPONTOS Tipo PONTOVIRGULA .)
    BEGIN           reduce using rule 12 (var -> listaVars DOISPONTOS Tipo PONTOVIRGULA .)
    RPAREN          reduce using rule 12 (var -> listaVars DOISPONTOS Tipo PONTOVIRGULA .)


state 102

    (14) var -> listaVars DOISPONTOS ARRAY LBRACKET . NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA

    NUMBER          shift and go to state 144


state 103

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS . Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA
    (17) Tipo -> . TYPEINTEGER
    (18) Tipo -> . TYPESTRING
    (19) Tipo -> . TYPEBOOLEAN

    TYPEINTEGER     shift and go to state 60
    TYPESTRING      shift and go to state 61
    TYPEBOOLEAN     shift and go to state 62

    Tipo                           shift and go to state 145

state 104

    (28) Comando -> IDENTIFIER ASSIGN Valor PONTOVIRGULA .

    END             reduce using rule 28 (Comando -> IDENTIFIER ASSIGN Valor PONTOVIRGULA .)
    IDENTIFIER      reduce using rule 28 (Comando -> IDENTIFIER ASSIGN Valor PONTOVIRGULA .)
    IF              reduce using rule 28 (Comando -> IDENTIFIER ASSIGN Valor PONTOVIRGULA .)
    FOR             reduce using rule 28 (Comando -> IDENTIFIER ASSIGN Valor PONTOVIRGULA .)
    WHILE           reduce using rule 28 (Comando -> IDENTIFIER ASSIGN Valor PONTOVIRGULA .)
    TO              reduce using rule 28 (Comando -> IDENTIFIER ASSIGN Valor PONTOVIRGULA .)
    DOWNTO          reduce using rule 28 (Comando -> IDENTIFIER ASSIGN Valor PONTOVIRGULA .)
    ELSE            reduce using rule 28 (Comando -> IDENTIFIER ASSIGN Valor PONTOVIRGULA .)


state 105

    (30) Comando -> IDENTIFIER ASSIGN CondA1 PONTOVIRGULA .

    END             reduce using rule 30 (Comando -> IDENTIFIER ASSIGN CondA1 PONTOVIRGULA .)
    IDENTIFIER      reduce using rule 30 (Comando -> IDENTIFIER ASSIGN CondA1 PONTOVIRGULA .)
    IF              reduce using rule 30 (Comando -> IDENTIFIER ASSIGN CondA1 PONTOVIRGULA .)
    FOR             reduce using rule 30 (Comando -> IDENTIFIER ASSIGN CondA1 PONTOVIRGULA .)
    WHILE           reduce using rule 30 (Comando -> IDENTIFIER ASSIGN CondA1 PONTOVIRGULA .)
    TO              reduce using rule 30 (Comando -> IDENTIFIER ASSIGN CondA1 PONTOVIRGULA .)
    DOWNTO          reduce using rule 30 (Comando -> IDENTIFIER ASSIGN CondA1 PONTOVIRGULA .)
    ELSE            reduce using rule 30 (Comando -> IDENTIFIER ASSIGN CondA1 PONTOVIRGULA .)


state 106

    (64) CondA1 -> LPAREN CondA1 . RPAREN
    (65) CondA1 -> CondA1 . SUM CondA2
    (66) CondA1 -> CondA1 . SUB CondA2

    RPAREN          shift and go to state 116
    SUM             shift and go to state 91
    SUB             shift and go to state 92


state 107

    (39) Function -> IDENTIFIER LPAREN Valores RPAREN . PONTOVIRGULA
    (40) Function -> IDENTIFIER LPAREN Valores RPAREN .

  ! shift/reduce conflict for PONTOVIRGULA resolved as shift
    PONTOVIRGULA    shift and go to state 146
    END             reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    IDENTIFIER      reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    IF              reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    FOR             reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    WHILE           reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    MUL             reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    DIVREAL         reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    DIV             reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    MOD             reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    EQUAL           reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    LESS            reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    GREATER         reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    LESSEQUAL       reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    GREATEREQUAL    reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    DIFFERENT       reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    SUM             reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    SUB             reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    AND             reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    OR              reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    THEN            reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    TO              reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    DOWNTO          reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    DO              reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    ELSE            reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    RPAREN          reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    VIRGULA         reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)
    RBRACKET        reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .)

  ! PONTOVIRGULA    [ reduce using rule 40 (Function -> IDENTIFIER LPAREN Valores RPAREN .) ]


state 108

    (76) Valores -> Valores VIRGULA . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    Valor                          shift and go to state 147
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 109

    (41) Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .

    END             reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    IDENTIFIER      reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    IF              reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    FOR             reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    WHILE           reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    MUL             reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    DIVREAL         reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    DIV             reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    MOD             reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    EQUAL           reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    LESS            reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    GREATER         reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    LESSEQUAL       reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    GREATEREQUAL    reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    DIFFERENT       reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    SUM             reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    SUB             reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    AND             reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    OR              reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    THEN            reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    TO              reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    DOWNTO          reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    DO              reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    PONTOVIRGULA    reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    ELSE            reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    RPAREN          reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    VIRGULA         reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)
    RBRACKET        reduce using rule 41 (Function -> IDENTIFIER LPAREN RPAREN PONTOVIRGULA .)


state 110

    (43) declaracaoIf -> IF Cond THEN Conteudo .
    (44) declaracaoIf -> IF Cond THEN Conteudo . ELSE Conteudo
    (23) Conteudo -> Conteudo . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    END             reduce using rule 43 (declaracaoIf -> IF Cond THEN Conteudo .)
    IDENTIFIER      reduce using rule 43 (declaracaoIf -> IF Cond THEN Conteudo .)
    IF              reduce using rule 43 (declaracaoIf -> IF Cond THEN Conteudo .)
    FOR             reduce using rule 43 (declaracaoIf -> IF Cond THEN Conteudo .)
    WHILE           reduce using rule 43 (declaracaoIf -> IF Cond THEN Conteudo .)
    TO              reduce using rule 43 (declaracaoIf -> IF Cond THEN Conteudo .)
    DOWNTO          reduce using rule 43 (declaracaoIf -> IF Cond THEN Conteudo .)
    ELSE            shift and go to state 148

  ! ELSE            [ reduce using rule 43 (declaracaoIf -> IF Cond THEN Conteudo .) ]
  ! IDENTIFIER      [ shift and go to state 25 ]
  ! IF              [ shift and go to state 26 ]
  ! FOR             [ shift and go to state 27 ]
  ! WHILE           [ shift and go to state 28 ]

    Comando                        shift and go to state 35
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 111

    (45) Cond -> LPAREN Cond RPAREN .

    THEN            reduce using rule 45 (Cond -> LPAREN Cond RPAREN .)
    DO              reduce using rule 45 (Cond -> LPAREN Cond RPAREN .)
    RPAREN          reduce using rule 45 (Cond -> LPAREN Cond RPAREN .)


state 112

    (47) CondL1 -> LPAREN CondL1 RPAREN .

    OR              reduce using rule 47 (CondL1 -> LPAREN CondL1 RPAREN .)
    THEN            reduce using rule 47 (CondL1 -> LPAREN CondL1 RPAREN .)
    DO              reduce using rule 47 (CondL1 -> LPAREN CondL1 RPAREN .)
    RPAREN          reduce using rule 47 (CondL1 -> LPAREN CondL1 RPAREN .)


state 113

    (50) CondL2 -> LPAREN CondL2 RPAREN .

    AND             reduce using rule 50 (CondL2 -> LPAREN CondL2 RPAREN .)
    OR              reduce using rule 50 (CondL2 -> LPAREN CondL2 RPAREN .)
    THEN            reduce using rule 50 (CondL2 -> LPAREN CondL2 RPAREN .)
    DO              reduce using rule 50 (CondL2 -> LPAREN CondL2 RPAREN .)
    RPAREN          reduce using rule 50 (CondL2 -> LPAREN CondL2 RPAREN .)


state 114

    (53) CondL3 -> LPAREN CondL3 RPAREN .

    AND             reduce using rule 53 (CondL3 -> LPAREN CondL3 RPAREN .)
    OR              reduce using rule 53 (CondL3 -> LPAREN CondL3 RPAREN .)
    THEN            reduce using rule 53 (CondL3 -> LPAREN CondL3 RPAREN .)
    DO              reduce using rule 53 (CondL3 -> LPAREN CondL3 RPAREN .)
    RPAREN          reduce using rule 53 (CondL3 -> LPAREN CondL3 RPAREN .)


state 115

    (56) CondR1 -> LPAREN CondR1 RPAREN .

    AND             reduce using rule 56 (CondR1 -> LPAREN CondR1 RPAREN .)
    OR              reduce using rule 56 (CondR1 -> LPAREN CondR1 RPAREN .)
    THEN            reduce using rule 56 (CondR1 -> LPAREN CondR1 RPAREN .)
    DO              reduce using rule 56 (CondR1 -> LPAREN CondR1 RPAREN .)
    RPAREN          reduce using rule 56 (CondR1 -> LPAREN CondR1 RPAREN .)


state 116

    (64) CondA1 -> LPAREN CondA1 RPAREN .

    EQUAL           reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    LESS            reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    GREATER         reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    LESSEQUAL       reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    GREATEREQUAL    reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    DIFFERENT       reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    SUM             reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    SUB             reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    AND             reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    OR              reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    THEN            reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    DO              reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    PONTOVIRGULA    reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    END             reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    IDENTIFIER      reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    IF              reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    FOR             reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    WHILE           reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    TO              reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    DOWNTO          reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    ELSE            reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)
    RPAREN          reduce using rule 64 (CondA1 -> LPAREN CondA1 RPAREN .)


state 117

    (68) CondA2 -> LPAREN CondA2 RPAREN .

    MUL             reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    DIVREAL         reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    DIV             reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    MOD             reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    EQUAL           reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    LESS            reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    GREATER         reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    LESSEQUAL       reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    GREATEREQUAL    reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    DIFFERENT       reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    SUM             reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    SUB             reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    AND             reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    OR              reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    THEN            reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    DO              reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    PONTOVIRGULA    reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    END             reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    IDENTIFIER      reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    IF              reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    FOR             reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    WHILE           reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    TO              reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    DOWNTO          reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    ELSE            reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)
    RPAREN          reduce using rule 68 (CondA2 -> LPAREN CondA2 RPAREN .)


state 118

    (74) CondA3 -> LPAREN CondA3 RPAREN .

    MUL             reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    DIVREAL         reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    DIV             reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    MOD             reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    EQUAL           reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    LESS            reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    GREATER         reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    LESSEQUAL       reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    GREATEREQUAL    reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    DIFFERENT       reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    SUM             reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    SUB             reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    AND             reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    OR              reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    THEN            reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    DO              reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    PONTOVIRGULA    reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    END             reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    IDENTIFIER      reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    IF              reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    FOR             reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    WHILE           reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    TO              reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    DOWNTO          reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    ELSE            reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)
    RPAREN          reduce using rule 74 (CondA3 -> LPAREN CondA3 RPAREN .)


state 119

    (48) CondL1 -> CondL1 OR CondL2 .
    (51) CondL2 -> CondL2 . AND CondL3

    OR              reduce using rule 48 (CondL1 -> CondL1 OR CondL2 .)
    THEN            reduce using rule 48 (CondL1 -> CondL1 OR CondL2 .)
    DO              reduce using rule 48 (CondL1 -> CondL1 OR CondL2 .)
    RPAREN          reduce using rule 48 (CondL1 -> CondL1 OR CondL2 .)
    AND             shift and go to state 82


state 120

    (50) CondL2 -> LPAREN . CondL2 RPAREN
    (53) CondL3 -> LPAREN . CondL3 RPAREN
    (56) CondR1 -> LPAREN . CondR1 RPAREN
    (64) CondA1 -> LPAREN . CondA1 RPAREN
    (68) CondA2 -> LPAREN . CondA2 RPAREN
    (74) CondA3 -> LPAREN . CondA3 RPAREN
    (50) CondL2 -> . LPAREN CondL2 RPAREN
    (51) CondL2 -> . CondL2 AND CondL3
    (52) CondL2 -> . CondL3
    (53) CondL3 -> . LPAREN CondL3 RPAREN
    (54) CondL3 -> . NOT CondR1
    (55) CondL3 -> . CondR1
    (56) CondR1 -> . LPAREN CondR1 RPAREN
    (57) CondR1 -> . CondA1 EQUAL CondA1
    (58) CondR1 -> . CondA1 LESS CondA1
    (59) CondR1 -> . CondA1 GREATER CondA1
    (60) CondR1 -> . CondA1 LESSEQUAL CondA1
    (61) CondR1 -> . CondA1 GREATEREQUAL CondA1
    (62) CondR1 -> . CondA1 DIFFERENT CondA1
    (63) CondR1 -> . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 120
    NOT             shift and go to state 43
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondL2                         shift and go to state 149
    CondL3                         shift and go to state 76
    CondR1                         shift and go to state 77
    CondA1                         shift and go to state 78
    CondA2                         shift and go to state 79
    CondA3                         shift and go to state 80
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 121

    (51) CondL2 -> CondL2 AND CondL3 .

    AND             reduce using rule 51 (CondL2 -> CondL2 AND CondL3 .)
    OR              reduce using rule 51 (CondL2 -> CondL2 AND CondL3 .)
    THEN            reduce using rule 51 (CondL2 -> CondL2 AND CondL3 .)
    DO              reduce using rule 51 (CondL2 -> CondL2 AND CondL3 .)
    RPAREN          reduce using rule 51 (CondL2 -> CondL2 AND CondL3 .)


state 122

    (53) CondL3 -> LPAREN . CondL3 RPAREN
    (56) CondR1 -> LPAREN . CondR1 RPAREN
    (64) CondA1 -> LPAREN . CondA1 RPAREN
    (68) CondA2 -> LPAREN . CondA2 RPAREN
    (74) CondA3 -> LPAREN . CondA3 RPAREN
    (53) CondL3 -> . LPAREN CondL3 RPAREN
    (54) CondL3 -> . NOT CondR1
    (55) CondL3 -> . CondR1
    (56) CondR1 -> . LPAREN CondR1 RPAREN
    (57) CondR1 -> . CondA1 EQUAL CondA1
    (58) CondR1 -> . CondA1 LESS CondA1
    (59) CondR1 -> . CondA1 GREATER CondA1
    (60) CondR1 -> . CondA1 LESSEQUAL CondA1
    (61) CondR1 -> . CondA1 GREATEREQUAL CondA1
    (62) CondR1 -> . CondA1 DIFFERENT CondA1
    (63) CondR1 -> . CondA1
    (64) CondA1 -> . LPAREN CondA1 RPAREN
    (65) CondA1 -> . CondA1 SUM CondA2
    (66) CondA1 -> . CondA1 SUB CondA2
    (67) CondA1 -> . CondA2
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 122
    NOT             shift and go to state 43
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondL3                         shift and go to state 150
    CondR1                         shift and go to state 77
    CondA1                         shift and go to state 78
    CondA2                         shift and go to state 79
    CondA3                         shift and go to state 80
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 123

    (56) CondR1 -> LPAREN CondR1 . RPAREN

    RPAREN          shift and go to state 115


state 124

    (57) CondR1 -> CondA1 EQUAL CondA1 .
    (65) CondA1 -> CondA1 . SUM CondA2
    (66) CondA1 -> CondA1 . SUB CondA2

    AND             reduce using rule 57 (CondR1 -> CondA1 EQUAL CondA1 .)
    OR              reduce using rule 57 (CondR1 -> CondA1 EQUAL CondA1 .)
    THEN            reduce using rule 57 (CondR1 -> CondA1 EQUAL CondA1 .)
    DO              reduce using rule 57 (CondR1 -> CondA1 EQUAL CondA1 .)
    RPAREN          reduce using rule 57 (CondR1 -> CondA1 EQUAL CondA1 .)
    SUM             shift and go to state 91
    SUB             shift and go to state 92


state 125

    (58) CondR1 -> CondA1 LESS CondA1 .
    (65) CondA1 -> CondA1 . SUM CondA2
    (66) CondA1 -> CondA1 . SUB CondA2

    AND             reduce using rule 58 (CondR1 -> CondA1 LESS CondA1 .)
    OR              reduce using rule 58 (CondR1 -> CondA1 LESS CondA1 .)
    THEN            reduce using rule 58 (CondR1 -> CondA1 LESS CondA1 .)
    DO              reduce using rule 58 (CondR1 -> CondA1 LESS CondA1 .)
    RPAREN          reduce using rule 58 (CondR1 -> CondA1 LESS CondA1 .)
    SUM             shift and go to state 91
    SUB             shift and go to state 92


state 126

    (59) CondR1 -> CondA1 GREATER CondA1 .
    (65) CondA1 -> CondA1 . SUM CondA2
    (66) CondA1 -> CondA1 . SUB CondA2

    AND             reduce using rule 59 (CondR1 -> CondA1 GREATER CondA1 .)
    OR              reduce using rule 59 (CondR1 -> CondA1 GREATER CondA1 .)
    THEN            reduce using rule 59 (CondR1 -> CondA1 GREATER CondA1 .)
    DO              reduce using rule 59 (CondR1 -> CondA1 GREATER CondA1 .)
    RPAREN          reduce using rule 59 (CondR1 -> CondA1 GREATER CondA1 .)
    SUM             shift and go to state 91
    SUB             shift and go to state 92


state 127

    (60) CondR1 -> CondA1 LESSEQUAL CondA1 .
    (65) CondA1 -> CondA1 . SUM CondA2
    (66) CondA1 -> CondA1 . SUB CondA2

    AND             reduce using rule 60 (CondR1 -> CondA1 LESSEQUAL CondA1 .)
    OR              reduce using rule 60 (CondR1 -> CondA1 LESSEQUAL CondA1 .)
    THEN            reduce using rule 60 (CondR1 -> CondA1 LESSEQUAL CondA1 .)
    DO              reduce using rule 60 (CondR1 -> CondA1 LESSEQUAL CondA1 .)
    RPAREN          reduce using rule 60 (CondR1 -> CondA1 LESSEQUAL CondA1 .)
    SUM             shift and go to state 91
    SUB             shift and go to state 92


state 128

    (61) CondR1 -> CondA1 GREATEREQUAL CondA1 .
    (65) CondA1 -> CondA1 . SUM CondA2
    (66) CondA1 -> CondA1 . SUB CondA2

    AND             reduce using rule 61 (CondR1 -> CondA1 GREATEREQUAL CondA1 .)
    OR              reduce using rule 61 (CondR1 -> CondA1 GREATEREQUAL CondA1 .)
    THEN            reduce using rule 61 (CondR1 -> CondA1 GREATEREQUAL CondA1 .)
    DO              reduce using rule 61 (CondR1 -> CondA1 GREATEREQUAL CondA1 .)
    RPAREN          reduce using rule 61 (CondR1 -> CondA1 GREATEREQUAL CondA1 .)
    SUM             shift and go to state 91
    SUB             shift and go to state 92


state 129

    (62) CondR1 -> CondA1 DIFFERENT CondA1 .
    (65) CondA1 -> CondA1 . SUM CondA2
    (66) CondA1 -> CondA1 . SUB CondA2

    AND             reduce using rule 62 (CondR1 -> CondA1 DIFFERENT CondA1 .)
    OR              reduce using rule 62 (CondR1 -> CondA1 DIFFERENT CondA1 .)
    THEN            reduce using rule 62 (CondR1 -> CondA1 DIFFERENT CondA1 .)
    DO              reduce using rule 62 (CondR1 -> CondA1 DIFFERENT CondA1 .)
    RPAREN          reduce using rule 62 (CondR1 -> CondA1 DIFFERENT CondA1 .)
    SUM             shift and go to state 91
    SUB             shift and go to state 92


state 130

    (65) CondA1 -> CondA1 SUM CondA2 .
    (69) CondA2 -> CondA2 . MUL CondA3
    (70) CondA2 -> CondA2 . DIVREAL CondA3
    (71) CondA2 -> CondA2 . DIV CondA3
    (72) CondA2 -> CondA2 . MOD CondA3

    EQUAL           reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    LESS            reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    GREATER         reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    LESSEQUAL       reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    GREATEREQUAL    reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    DIFFERENT       reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    SUM             reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    SUB             reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    AND             reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    OR              reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    THEN            reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    DO              reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    PONTOVIRGULA    reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    END             reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    IDENTIFIER      reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    IF              reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    FOR             reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    WHILE           reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    TO              reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    DOWNTO          reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    ELSE            reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    RPAREN          reduce using rule 65 (CondA1 -> CondA1 SUM CondA2 .)
    MUL             shift and go to state 93
    DIVREAL         shift and go to state 94
    DIV             shift and go to state 95
    MOD             shift and go to state 96


state 131

    (68) CondA2 -> LPAREN . CondA2 RPAREN
    (74) CondA3 -> LPAREN . CondA3 RPAREN
    (68) CondA2 -> . LPAREN CondA2 RPAREN
    (69) CondA2 -> . CondA2 MUL CondA3
    (70) CondA2 -> . CondA2 DIVREAL CondA3
    (71) CondA2 -> . CondA2 DIV CondA3
    (72) CondA2 -> . CondA2 MOD CondA3
    (73) CondA2 -> . CondA3
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 131
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA2                         shift and go to state 151
    CondA3                         shift and go to state 80
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 132

    (66) CondA1 -> CondA1 SUB CondA2 .
    (69) CondA2 -> CondA2 . MUL CondA3
    (70) CondA2 -> CondA2 . DIVREAL CondA3
    (71) CondA2 -> CondA2 . DIV CondA3
    (72) CondA2 -> CondA2 . MOD CondA3

    EQUAL           reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    LESS            reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    GREATER         reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    LESSEQUAL       reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    GREATEREQUAL    reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    DIFFERENT       reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    SUM             reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    SUB             reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    AND             reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    OR              reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    THEN            reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    DO              reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    PONTOVIRGULA    reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    END             reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    IDENTIFIER      reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    IF              reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    FOR             reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    WHILE           reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    TO              reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    DOWNTO          reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    ELSE            reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    RPAREN          reduce using rule 66 (CondA1 -> CondA1 SUB CondA2 .)
    MUL             shift and go to state 93
    DIVREAL         shift and go to state 94
    DIV             shift and go to state 95
    MOD             shift and go to state 96


state 133

    (69) CondA2 -> CondA2 MUL CondA3 .

    MUL             reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    DIVREAL         reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    DIV             reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    MOD             reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    EQUAL           reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    LESS            reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    GREATER         reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    LESSEQUAL       reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    GREATEREQUAL    reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    DIFFERENT       reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    SUM             reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    SUB             reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    AND             reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    OR              reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    THEN            reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    DO              reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    PONTOVIRGULA    reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    END             reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    IDENTIFIER      reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    IF              reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    FOR             reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    WHILE           reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    TO              reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    DOWNTO          reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    ELSE            reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)
    RPAREN          reduce using rule 69 (CondA2 -> CondA2 MUL CondA3 .)


state 134

    (74) CondA3 -> LPAREN . CondA3 RPAREN
    (74) CondA3 -> . LPAREN CondA3 RPAREN
    (75) CondA3 -> . Valor
    (34) Valor -> . Identifier
    (35) Valor -> . NUMBER
    (36) Valor -> . BOOLEAN
    (37) Valor -> . STRING
    (38) Valor -> . Function
    (32) Identifier -> . IDENTIFIER
    (33) Identifier -> . IDENTIFIER LBRACKET Valor RBRACKET
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    LPAREN          shift and go to state 134
    NUMBER          shift and go to state 50
    BOOLEAN         shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 54

    CondA3                         shift and go to state 152
    Valor                          shift and go to state 48
    Identifier                     shift and go to state 49
    Function                       shift and go to state 53

state 135

    (70) CondA2 -> CondA2 DIVREAL CondA3 .

    MUL             reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    DIVREAL         reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    DIV             reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    MOD             reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    EQUAL           reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    LESS            reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    GREATER         reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    LESSEQUAL       reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    GREATEREQUAL    reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    DIFFERENT       reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    SUM             reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    SUB             reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    AND             reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    OR              reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    THEN            reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    DO              reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    PONTOVIRGULA    reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    END             reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    IDENTIFIER      reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    IF              reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    FOR             reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    WHILE           reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    TO              reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    DOWNTO          reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    ELSE            reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)
    RPAREN          reduce using rule 70 (CondA2 -> CondA2 DIVREAL CondA3 .)


state 136

    (71) CondA2 -> CondA2 DIV CondA3 .

    MUL             reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    DIVREAL         reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    DIV             reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    MOD             reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    EQUAL           reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    LESS            reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    GREATER         reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    LESSEQUAL       reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    GREATEREQUAL    reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    DIFFERENT       reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    SUM             reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    SUB             reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    AND             reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    OR              reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    THEN            reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    DO              reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    PONTOVIRGULA    reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    END             reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    IDENTIFIER      reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    IF              reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    FOR             reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    WHILE           reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    TO              reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    DOWNTO          reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    ELSE            reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)
    RPAREN          reduce using rule 71 (CondA2 -> CondA2 DIV CondA3 .)


state 137

    (72) CondA2 -> CondA2 MOD CondA3 .

    MUL             reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    DIVREAL         reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    DIV             reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    MOD             reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    EQUAL           reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    LESS            reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    GREATER         reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    LESSEQUAL       reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    GREATEREQUAL    reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    DIFFERENT       reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    SUM             reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    SUB             reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    AND             reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    OR              reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    THEN            reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    DO              reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    PONTOVIRGULA    reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    END             reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    IDENTIFIER      reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    IF              reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    FOR             reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    WHILE           reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    TO              reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    DOWNTO          reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    ELSE            reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)
    RPAREN          reduce using rule 72 (CondA2 -> CondA2 MOD CondA3 .)


state 138

    (33) Identifier -> IDENTIFIER LBRACKET Valor . RBRACKET

    RBRACKET        shift and go to state 153


state 139

    (78) For -> FOR InicioFor TO FimFor . DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> FOR InicioFor TO FimFor . DO Comando

    DO              shift and go to state 154


state 140

    (83) FimFor -> Valor .

    DO              reduce using rule 83 (FimFor -> Valor .)


state 141

    (79) For -> FOR InicioFor DOWNTO FimFor . DO BEGIN Conteudo END PONTOVIRGULA
    (81) For -> FOR InicioFor DOWNTO FimFor . DO Comando

    DO              shift and go to state 155


state 142

    (84) While -> WHILE Cond DO BEGIN . Conteudo END PONTOVIRGULA
    (22) Conteudo -> . Comando
    (23) Conteudo -> . Conteudo Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Conteudo                       shift and go to state 156
    Comando                        shift and go to state 20
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 143

    (85) While -> WHILE Cond DO Comando .

    END             reduce using rule 85 (While -> WHILE Cond DO Comando .)
    IDENTIFIER      reduce using rule 85 (While -> WHILE Cond DO Comando .)
    IF              reduce using rule 85 (While -> WHILE Cond DO Comando .)
    FOR             reduce using rule 85 (While -> WHILE Cond DO Comando .)
    WHILE           reduce using rule 85 (While -> WHILE Cond DO Comando .)
    TO              reduce using rule 85 (While -> WHILE Cond DO Comando .)
    DOWNTO          reduce using rule 85 (While -> WHILE Cond DO Comando .)
    ELSE            reduce using rule 85 (While -> WHILE Cond DO Comando .)


state 144

    (14) var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER . PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA

    PONTO           shift and go to state 157


state 145

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo . PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA

    PONTOVIRGULA    shift and go to state 158


state 146

    (39) Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .

    END             reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    IDENTIFIER      reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    IF              reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    FOR             reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    WHILE           reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    MUL             reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    DIVREAL         reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    DIV             reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    MOD             reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    EQUAL           reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    LESS            reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    GREATER         reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    LESSEQUAL       reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    GREATEREQUAL    reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    DIFFERENT       reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    SUM             reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    SUB             reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    AND             reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    OR              reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    THEN            reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    TO              reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    DOWNTO          reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    DO              reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    PONTOVIRGULA    reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    ELSE            reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    RPAREN          reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    VIRGULA         reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)
    RBRACKET        reduce using rule 39 (Function -> IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA .)


state 147

    (76) Valores -> Valores VIRGULA Valor .

    RPAREN          reduce using rule 76 (Valores -> Valores VIRGULA Valor .)
    VIRGULA         reduce using rule 76 (Valores -> Valores VIRGULA Valor .)


state 148

    (44) declaracaoIf -> IF Cond THEN Conteudo ELSE . Conteudo
    (22) Conteudo -> . Comando
    (23) Conteudo -> . Conteudo Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Conteudo                       shift and go to state 159
    Comando                        shift and go to state 20
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 149

    (50) CondL2 -> LPAREN CondL2 . RPAREN
    (51) CondL2 -> CondL2 . AND CondL3

    RPAREN          shift and go to state 113
    AND             shift and go to state 82


state 150

    (53) CondL3 -> LPAREN CondL3 . RPAREN

    RPAREN          shift and go to state 114


state 151

    (68) CondA2 -> LPAREN CondA2 . RPAREN
    (69) CondA2 -> CondA2 . MUL CondA3
    (70) CondA2 -> CondA2 . DIVREAL CondA3
    (71) CondA2 -> CondA2 . DIV CondA3
    (72) CondA2 -> CondA2 . MOD CondA3

    RPAREN          shift and go to state 117
    MUL             shift and go to state 93
    DIVREAL         shift and go to state 94
    DIV             shift and go to state 95
    MOD             shift and go to state 96


state 152

    (74) CondA3 -> LPAREN CondA3 . RPAREN

    RPAREN          shift and go to state 118


state 153

    (33) Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .

    MUL             reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    DIVREAL         reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    DIV             reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    MOD             reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    EQUAL           reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    LESS            reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    GREATER         reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    LESSEQUAL       reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    GREATEREQUAL    reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    DIFFERENT       reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    SUM             reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    SUB             reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    AND             reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    OR              reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    THEN            reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    DO              reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    PONTOVIRGULA    reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    END             reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    IDENTIFIER      reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    IF              reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    FOR             reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    WHILE           reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    TO              reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    DOWNTO          reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    ELSE            reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    RPAREN          reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    VIRGULA         reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)
    RBRACKET        reduce using rule 33 (Identifier -> IDENTIFIER LBRACKET Valor RBRACKET .)


state 154

    (78) For -> FOR InicioFor TO FimFor DO . BEGIN Conteudo END PONTOVIRGULA
    (80) For -> FOR InicioFor TO FimFor DO . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    BEGIN           shift and go to state 160
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Comando                        shift and go to state 161
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 155

    (79) For -> FOR InicioFor DOWNTO FimFor DO . BEGIN Conteudo END PONTOVIRGULA
    (81) For -> FOR InicioFor DOWNTO FimFor DO . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    BEGIN           shift and go to state 162
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Comando                        shift and go to state 163
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 156

    (84) While -> WHILE Cond DO BEGIN Conteudo . END PONTOVIRGULA
    (23) Conteudo -> Conteudo . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    END             shift and go to state 164
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Comando                        shift and go to state 35
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 157

    (14) var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO . PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA

    PONTO           shift and go to state 165


state 158

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA . declaracaoVars BEGIN Conteudo END PONTOVIRGULA
    (8) declaracaoVars -> . VAR vars
    (9) declaracaoVars -> .

    VAR             shift and go to state 10
    BEGIN           reduce using rule 9 (declaracaoVars -> .)

    declaracaoVars                 shift and go to state 166

state 159

    (44) declaracaoIf -> IF Cond THEN Conteudo ELSE Conteudo .
    (23) Conteudo -> Conteudo . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    END             reduce using rule 44 (declaracaoIf -> IF Cond THEN Conteudo ELSE Conteudo .)
    IDENTIFIER      reduce using rule 44 (declaracaoIf -> IF Cond THEN Conteudo ELSE Conteudo .)
    IF              reduce using rule 44 (declaracaoIf -> IF Cond THEN Conteudo ELSE Conteudo .)
    FOR             reduce using rule 44 (declaracaoIf -> IF Cond THEN Conteudo ELSE Conteudo .)
    WHILE           reduce using rule 44 (declaracaoIf -> IF Cond THEN Conteudo ELSE Conteudo .)
    TO              reduce using rule 44 (declaracaoIf -> IF Cond THEN Conteudo ELSE Conteudo .)
    DOWNTO          reduce using rule 44 (declaracaoIf -> IF Cond THEN Conteudo ELSE Conteudo .)
    ELSE            reduce using rule 44 (declaracaoIf -> IF Cond THEN Conteudo ELSE Conteudo .)

  ! IDENTIFIER      [ shift and go to state 25 ]
  ! IF              [ shift and go to state 26 ]
  ! FOR             [ shift and go to state 27 ]
  ! WHILE           [ shift and go to state 28 ]

    Comando                        shift and go to state 35
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 160

    (78) For -> FOR InicioFor TO FimFor DO BEGIN . Conteudo END PONTOVIRGULA
    (22) Conteudo -> . Comando
    (23) Conteudo -> . Conteudo Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Conteudo                       shift and go to state 167
    Comando                        shift and go to state 20
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 161

    (80) For -> FOR InicioFor TO FimFor DO Comando .

    END             reduce using rule 80 (For -> FOR InicioFor TO FimFor DO Comando .)
    IDENTIFIER      reduce using rule 80 (For -> FOR InicioFor TO FimFor DO Comando .)
    IF              reduce using rule 80 (For -> FOR InicioFor TO FimFor DO Comando .)
    FOR             reduce using rule 80 (For -> FOR InicioFor TO FimFor DO Comando .)
    WHILE           reduce using rule 80 (For -> FOR InicioFor TO FimFor DO Comando .)
    TO              reduce using rule 80 (For -> FOR InicioFor TO FimFor DO Comando .)
    DOWNTO          reduce using rule 80 (For -> FOR InicioFor TO FimFor DO Comando .)
    ELSE            reduce using rule 80 (For -> FOR InicioFor TO FimFor DO Comando .)


state 162

    (79) For -> FOR InicioFor DOWNTO FimFor DO BEGIN . Conteudo END PONTOVIRGULA
    (22) Conteudo -> . Comando
    (23) Conteudo -> . Conteudo Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Conteudo                       shift and go to state 168
    Comando                        shift and go to state 20
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 163

    (81) For -> FOR InicioFor DOWNTO FimFor DO Comando .

    END             reduce using rule 81 (For -> FOR InicioFor DOWNTO FimFor DO Comando .)
    IDENTIFIER      reduce using rule 81 (For -> FOR InicioFor DOWNTO FimFor DO Comando .)
    IF              reduce using rule 81 (For -> FOR InicioFor DOWNTO FimFor DO Comando .)
    FOR             reduce using rule 81 (For -> FOR InicioFor DOWNTO FimFor DO Comando .)
    WHILE           reduce using rule 81 (For -> FOR InicioFor DOWNTO FimFor DO Comando .)
    TO              reduce using rule 81 (For -> FOR InicioFor DOWNTO FimFor DO Comando .)
    DOWNTO          reduce using rule 81 (For -> FOR InicioFor DOWNTO FimFor DO Comando .)
    ELSE            reduce using rule 81 (For -> FOR InicioFor DOWNTO FimFor DO Comando .)


state 164

    (84) While -> WHILE Cond DO BEGIN Conteudo END . PONTOVIRGULA

    PONTOVIRGULA    shift and go to state 169


state 165

    (14) var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO . NUMBER RBRACKET OF Tipo PONTOVIRGULA

    NUMBER          shift and go to state 170


state 166

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars . BEGIN Conteudo END PONTOVIRGULA

    BEGIN           shift and go to state 171


state 167

    (78) For -> FOR InicioFor TO FimFor DO BEGIN Conteudo . END PONTOVIRGULA
    (23) Conteudo -> Conteudo . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    END             shift and go to state 172
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Comando                        shift and go to state 35
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 168

    (79) For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo . END PONTOVIRGULA
    (23) Conteudo -> Conteudo . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    END             shift and go to state 173
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Comando                        shift and go to state 35
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 169

    (84) While -> WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA .

    END             reduce using rule 84 (While -> WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA .)
    IDENTIFIER      reduce using rule 84 (While -> WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA .)
    IF              reduce using rule 84 (While -> WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA .)
    FOR             reduce using rule 84 (While -> WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA .)
    WHILE           reduce using rule 84 (While -> WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA .)
    TO              reduce using rule 84 (While -> WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA .)
    DOWNTO          reduce using rule 84 (While -> WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA .)
    ELSE            reduce using rule 84 (While -> WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA .)


state 170

    (14) var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER . RBRACKET OF Tipo PONTOVIRGULA

    RBRACKET        shift and go to state 174


state 171

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN . Conteudo END PONTOVIRGULA
    (22) Conteudo -> . Comando
    (23) Conteudo -> . Conteudo Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Conteudo                       shift and go to state 175
    Comando                        shift and go to state 20
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 172

    (78) For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END . PONTOVIRGULA

    PONTOVIRGULA    shift and go to state 176


state 173

    (79) For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END . PONTOVIRGULA

    PONTOVIRGULA    shift and go to state 177


state 174

    (14) var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET . OF Tipo PONTOVIRGULA

    OF              shift and go to state 178


state 175

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo . END PONTOVIRGULA
    (23) Conteudo -> Conteudo . Comando
    (24) Comando -> . declaracaoIf
    (25) Comando -> . For
    (26) Comando -> . While
    (27) Comando -> . Function
    (28) Comando -> . IDENTIFIER ASSIGN Valor PONTOVIRGULA
    (29) Comando -> . IDENTIFIER ASSIGN Valor
    (30) Comando -> . IDENTIFIER ASSIGN CondA1 PONTOVIRGULA
    (31) Comando -> . IDENTIFIER ASSIGN CondA1
    (43) declaracaoIf -> . IF Cond THEN Conteudo
    (44) declaracaoIf -> . IF Cond THEN Conteudo ELSE Conteudo
    (78) For -> . FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (79) For -> . FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA
    (80) For -> . FOR InicioFor TO FimFor DO Comando
    (81) For -> . FOR InicioFor DOWNTO FimFor DO Comando
    (84) While -> . WHILE Cond DO BEGIN Conteudo END PONTOVIRGULA
    (85) While -> . WHILE Cond DO Comando
    (39) Function -> . IDENTIFIER LPAREN Valores RPAREN PONTOVIRGULA
    (40) Function -> . IDENTIFIER LPAREN Valores RPAREN
    (41) Function -> . IDENTIFIER LPAREN RPAREN PONTOVIRGULA
    (42) Function -> . IDENTIFIER LPAREN RPAREN

    END             shift and go to state 179
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    FOR             shift and go to state 27
    WHILE           shift and go to state 28

    Comando                        shift and go to state 35
    declaracaoIf                   shift and go to state 21
    For                            shift and go to state 22
    While                          shift and go to state 23
    Function                       shift and go to state 24

state 176

    (78) For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA .

    END             reduce using rule 78 (For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    IDENTIFIER      reduce using rule 78 (For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    IF              reduce using rule 78 (For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    FOR             reduce using rule 78 (For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    WHILE           reduce using rule 78 (For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    TO              reduce using rule 78 (For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    DOWNTO          reduce using rule 78 (For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    ELSE            reduce using rule 78 (For -> FOR InicioFor TO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)


state 177

    (79) For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA .

    END             reduce using rule 79 (For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    IDENTIFIER      reduce using rule 79 (For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    IF              reduce using rule 79 (For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    FOR             reduce using rule 79 (For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    WHILE           reduce using rule 79 (For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    TO              reduce using rule 79 (For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    DOWNTO          reduce using rule 79 (For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)
    ELSE            reduce using rule 79 (For -> FOR InicioFor DOWNTO FimFor DO BEGIN Conteudo END PONTOVIRGULA .)


state 178

    (14) var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF . Tipo PONTOVIRGULA
    (17) Tipo -> . TYPEINTEGER
    (18) Tipo -> . TYPESTRING
    (19) Tipo -> . TYPEBOOLEAN

    TYPEINTEGER     shift and go to state 60
    TYPESTRING      shift and go to state 61
    TYPEBOOLEAN     shift and go to state 62

    Tipo                           shift and go to state 180

state 179

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END . PONTOVIRGULA

    PONTOVIRGULA    shift and go to state 181


state 180

    (14) var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo . PONTOVIRGULA

    PONTOVIRGULA    shift and go to state 182


state 181

    (5) declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA .

    VAR             reduce using rule 5 (declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA .)
    FUNCTION        reduce using rule 5 (declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA .)
    BEGIN           reduce using rule 5 (declaracaoFunction -> FUNCTION IDENTIFIER LPAREN argsFunction RPAREN DOISPONTOS Tipo PONTOVIRGULA declaracaoVars BEGIN Conteudo END PONTOVIRGULA .)


state 182

    (14) var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA .

    IDENTIFIER      reduce using rule 14 (var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA .)
    BEGIN           reduce using rule 14 (var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA .)
    RPAREN          reduce using rule 14 (var -> listaVars DOISPONTOS ARRAY LBRACKET NUMBER PONTO PONTO NUMBER RBRACKET OF Tipo PONTOVIRGULA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for PONTOVIRGULA in state 66 resolved as shift
WARNING: shift/reduce conflict for PONTOVIRGULA in state 70 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 74 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 75 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 76 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 77 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 78 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 79 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 80 resolved as shift
WARNING: shift/reduce conflict for PONTOVIRGULA in state 107 resolved as shift
WARNING: reduce/reduce conflict in state 66 resolved using rule (Comando -> IDENTIFIER ASSIGN Valor)
WARNING: rejected rule (CondA3 -> Valor) in state 66
